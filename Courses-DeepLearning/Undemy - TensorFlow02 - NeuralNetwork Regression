{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyMU48M+6xb5r2j9TXByfZmN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# Introducction to Regression\n","* NNR : predicting a numerical variable bases on some other combination of variabeles\n","* Archiutecture of a neural network regression (NNR) model\n","* Input shapes and output shapes of a regression model\n","* Creating custom data to view and fit\n","* Steps in modelling\n","* Creating a model, compiling a model. fitting a model, evaluating a model\n","* Different evaluation methods\n","* Saving and loading models"],"metadata":{"id":"Qnev50OnIxCv"}},{"cell_type":"code","source":["import tensorflow as tf\n","import numpy as np\n","import matplotlib.pyplot as plt\n","print(tf.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HnfAgwQgSSek","executionInfo":{"status":"ok","timestamp":1707069776919,"user_tz":180,"elapsed":228,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"a8525190-d55f-4bc7-ac9f-4bf3d438fe0e"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["2.15.0\n"]}]},{"cell_type":"markdown","source":["## Create data to vie and fit"],"metadata":{"id":"E1eCW37sSmlG"}},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":453},"id":"5h6FL4qxHXW1","executionInfo":{"status":"ok","timestamp":1707069777469,"user_tz":180,"elapsed":319,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"6756551e-4750-4b33-cea2-a8d3bb7f45ed"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7ba7dfb8d390>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Create features\n","X = np.array([-7.0,-4.0,-1.0,2.0,5.0,8.0,11.0,14.0]) # Independent variable\n","\n","# Create labels\n","y = np.array([3.0,6.0,9.0,12.0,15.0,18.0,21.0,24.0,]) # Dependet variable\n","\n","# Visualize it\n","plt.scatter(X,y)"]},{"cell_type":"markdown","source":["### Input and Output shapes\n"],"metadata":{"id":"YhYuSB-GS8s6"}},{"cell_type":"code","source":["# Create a demo tensor for our housing price prediction problem\n","house_info = tf.constant([\"'bedroom\", 'bathroom', 'garage'])\n","house_price = tf.constant([939700])"],"metadata":{"id":"LF7-ldGJUB_o","executionInfo":{"status":"ok","timestamp":1707069778686,"user_tz":180,"elapsed":769,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["#Turn our Numpy arrays into tensor\n","X = tf.constant(X)\n","y = tf.constant(y)"],"metadata":{"id":"P4Fg9h1kVkbr","executionInfo":{"status":"ok","timestamp":1707069778686,"user_tz":180,"elapsed":2,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["### Steps in modelling with TensorFlow\n","1. **Creating a model** - define the input and output layers, as well as the hidden layers of a deep learning model\n","2. **Compiling a model** - define a loss function, the optmizer and evaluation matrics\n","3. **Fitting the model** - letting the model try to find patterns between X & y"],"metadata":{"id":"8pZsDiN1V7K1"}},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create a model using the Sequential API\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile the model\n","\n","model.compile(loss = tf.keras.losses.mae, #mae is Mean Absolute Error\n","              optimizer = tf.keras.optimizers.SGD(), #SGD is Stochastic Gradient Descent\n","              metrics = ['mae'])\n","\n","# 3. Fit the model\n","model.fit(tf.expand_dims(X, axis=-1),y, epochs = 5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r5frAC4HWhhu","executionInfo":{"status":"ok","timestamp":1707069780309,"user_tz":180,"elapsed":1625,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"ce002f7c-c00e-4dcb-8fcd-f1d1332478b3"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","1/1 [==============================] - 1s 1s/step - loss: 20.2398 - mae: 20.2398\n","Epoch 2/5\n","1/1 [==============================] - 0s 11ms/step - loss: 19.9586 - mae: 19.9586\n","Epoch 3/5\n","1/1 [==============================] - 0s 10ms/step - loss: 19.6773 - mae: 19.6773\n","Epoch 4/5\n","1/1 [==============================] - 0s 15ms/step - loss: 19.3961 - mae: 19.3961\n","Epoch 5/5\n","1/1 [==============================] - 0s 10ms/step - loss: 19.1148 - mae: 19.1148\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7ba7d50dd840>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Check out X and y\n","X, y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HmM2sdFmWgi2","executionInfo":{"status":"ok","timestamp":1707069780309,"user_tz":180,"elapsed":6,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"f6a7b087-8dab-4dc2-b2db-4705a44eaea2"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float64, numpy=array([-7., -4., -1.,  2.,  5.,  8., 11., 14.])>,\n"," <tf.Tensor: shape=(8,), dtype=float64, numpy=array([ 3.,  6.,  9., 12., 15., 18., 21., 24.])>)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Try and make a prediction\n","model.predict([17.0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sZFzfL3kaes3","executionInfo":{"status":"ok","timestamp":1707069780309,"user_tz":180,"elapsed":4,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"6d59b921-c386-4bb7-bddd-b7d14c7fb819"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 83ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[-19.752785]], dtype=float32)"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["\n","\n",">**NOTE : Not a good prediction from our model**\n","\n","\n","\n"],"metadata":{"id":"DvoewpqcbDTO"}},{"cell_type":"markdown","source":["### Improving our Model\n","1. Creating a model - Here we might add more layers, increase the number of hidden units (neurons), change the activation funcion of each layer.\n","2. Compiling model - Here we might change the optmiziation function or the learning rate\n","3. Fitting model - Here we might fit a model for more epochs (longer) or on more data (give a model more explample to lear from)\n","\n"],"metadata":{"id":"8kQ2VEg4bK2q"}},{"cell_type":"code","source":[],"metadata":{"id":"6ZSgc7SWbKbO","executionInfo":{"status":"ok","timestamp":1707069780643,"user_tz":180,"elapsed":336,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["\n","# 1. Create a model using the Sequential API\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100, activation = None),\n","    tf.keras.layers.Dense(1),\n","])\n","\n","# 2. Compile the model\n","\n","model.compile(loss = 'mae', #mae is Mean Absolute Error\n","              optimizer = tf.keras.optimizers.Adam(lr = 0.01), #SGD is Stochastic Gradient Descent\n","              metrics = ['mae'])\n","\n","# 3. Fit the model\n","model.fit(tf.expand_dims(X, axis=-1),y, epochs = 100)"],"metadata":{"id":"PztsO9XWw-rJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707069783657,"user_tz":180,"elapsed":3017,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"fef98c93-4ca5-4277-e735-7102f0322c5c"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1/1 [==============================] - 1s 1s/step - loss: 14.1645 - mae: 14.1645\n","Epoch 2/100\n","1/1 [==============================] - 0s 15ms/step - loss: 14.0629 - mae: 14.0629\n","Epoch 3/100\n","1/1 [==============================] - 0s 13ms/step - loss: 13.9615 - mae: 13.9615\n","Epoch 4/100\n","1/1 [==============================] - 0s 14ms/step - loss: 13.8601 - mae: 13.8601\n","Epoch 5/100\n","1/1 [==============================] - 0s 12ms/step - loss: 13.7588 - mae: 13.7588\n","Epoch 6/100\n","1/1 [==============================] - 0s 10ms/step - loss: 13.6575 - mae: 13.6575\n","Epoch 7/100\n","1/1 [==============================] - 0s 14ms/step - loss: 13.5564 - mae: 13.5564\n","Epoch 8/100\n","1/1 [==============================] - 0s 14ms/step - loss: 13.4553 - mae: 13.4553\n","Epoch 9/100\n","1/1 [==============================] - 0s 14ms/step - loss: 13.3543 - mae: 13.3543\n","Epoch 10/100\n","1/1 [==============================] - 0s 11ms/step - loss: 13.2533 - mae: 13.2533\n","Epoch 11/100\n","1/1 [==============================] - 0s 16ms/step - loss: 13.1524 - mae: 13.1524\n","Epoch 12/100\n","1/1 [==============================] - 0s 12ms/step - loss: 13.0515 - mae: 13.0515\n","Epoch 13/100\n","1/1 [==============================] - 0s 15ms/step - loss: 12.9507 - mae: 12.9507\n","Epoch 14/100\n","1/1 [==============================] - 0s 13ms/step - loss: 12.8498 - mae: 12.8498\n","Epoch 15/100\n","1/1 [==============================] - 0s 12ms/step - loss: 12.7490 - mae: 12.7490\n","Epoch 16/100\n","1/1 [==============================] - 0s 14ms/step - loss: 12.6482 - mae: 12.6482\n","Epoch 17/100\n","1/1 [==============================] - 0s 15ms/step - loss: 12.5473 - mae: 12.5473\n","Epoch 18/100\n","1/1 [==============================] - 0s 13ms/step - loss: 12.4464 - mae: 12.4464\n","Epoch 19/100\n","1/1 [==============================] - 0s 14ms/step - loss: 12.3455 - mae: 12.3455\n","Epoch 20/100\n","1/1 [==============================] - 0s 14ms/step - loss: 12.2444 - mae: 12.2444\n","Epoch 21/100\n","1/1 [==============================] - 0s 11ms/step - loss: 12.1433 - mae: 12.1433\n","Epoch 22/100\n","1/1 [==============================] - 0s 15ms/step - loss: 12.0420 - mae: 12.0420\n","Epoch 23/100\n","1/1 [==============================] - 0s 12ms/step - loss: 11.9407 - mae: 11.9407\n","Epoch 24/100\n","1/1 [==============================] - 0s 12ms/step - loss: 11.8391 - mae: 11.8391\n","Epoch 25/100\n","1/1 [==============================] - 0s 12ms/step - loss: 11.7374 - mae: 11.7374\n","Epoch 26/100\n","1/1 [==============================] - 0s 11ms/step - loss: 11.6356 - mae: 11.6356\n","Epoch 27/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.5335 - mae: 11.5335\n","Epoch 28/100\n","1/1 [==============================] - 0s 12ms/step - loss: 11.4312 - mae: 11.4312\n","Epoch 29/100\n","1/1 [==============================] - 0s 12ms/step - loss: 11.3287 - mae: 11.3287\n","Epoch 30/100\n","1/1 [==============================] - 0s 14ms/step - loss: 11.2259 - mae: 11.2259\n","Epoch 31/100\n","1/1 [==============================] - 0s 11ms/step - loss: 11.1228 - mae: 11.1228\n","Epoch 32/100\n","1/1 [==============================] - 0s 11ms/step - loss: 11.0194 - mae: 11.0194\n","Epoch 33/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.9157 - mae: 10.9157\n","Epoch 34/100\n","1/1 [==============================] - 0s 14ms/step - loss: 10.8117 - mae: 10.8117\n","Epoch 35/100\n","1/1 [==============================] - 0s 14ms/step - loss: 10.7074 - mae: 10.7074\n","Epoch 36/100\n","1/1 [==============================] - 0s 15ms/step - loss: 10.6027 - mae: 10.6027\n","Epoch 37/100\n","1/1 [==============================] - 0s 12ms/step - loss: 10.4976 - mae: 10.4976\n","Epoch 38/100\n","1/1 [==============================] - 0s 12ms/step - loss: 10.3921 - mae: 10.3921\n","Epoch 39/100\n","1/1 [==============================] - 0s 15ms/step - loss: 10.2862 - mae: 10.2862\n","Epoch 40/100\n","1/1 [==============================] - 0s 13ms/step - loss: 10.1798 - mae: 10.1798\n","Epoch 41/100\n","1/1 [==============================] - 0s 17ms/step - loss: 10.0730 - mae: 10.0730\n","Epoch 42/100\n","1/1 [==============================] - 0s 15ms/step - loss: 9.9657 - mae: 9.9657\n","Epoch 43/100\n","1/1 [==============================] - 0s 17ms/step - loss: 9.8580 - mae: 9.8580\n","Epoch 44/100\n","1/1 [==============================] - 0s 15ms/step - loss: 9.7497 - mae: 9.7497\n","Epoch 45/100\n","1/1 [==============================] - 0s 12ms/step - loss: 9.6409 - mae: 9.6409\n","Epoch 46/100\n","1/1 [==============================] - 0s 16ms/step - loss: 9.5316 - mae: 9.5316\n","Epoch 47/100\n","1/1 [==============================] - 0s 12ms/step - loss: 9.4217 - mae: 9.4217\n","Epoch 48/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.3113 - mae: 9.3113\n","Epoch 49/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.2002 - mae: 9.2002\n","Epoch 50/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.0885 - mae: 9.0885\n","Epoch 51/100\n","1/1 [==============================] - 0s 15ms/step - loss: 8.9762 - mae: 8.9762\n","Epoch 52/100\n","1/1 [==============================] - 0s 14ms/step - loss: 8.8632 - mae: 8.8632\n","Epoch 53/100\n","1/1 [==============================] - 0s 16ms/step - loss: 8.7496 - mae: 8.7496\n","Epoch 54/100\n","1/1 [==============================] - 0s 12ms/step - loss: 8.6352 - mae: 8.6352\n","Epoch 55/100\n","1/1 [==============================] - 0s 12ms/step - loss: 8.5202 - mae: 8.5202\n","Epoch 56/100\n","1/1 [==============================] - 0s 12ms/step - loss: 8.4044 - mae: 8.4044\n","Epoch 57/100\n","1/1 [==============================] - 0s 15ms/step - loss: 8.2879 - mae: 8.2879\n","Epoch 58/100\n","1/1 [==============================] - 0s 11ms/step - loss: 8.1706 - mae: 8.1706\n","Epoch 59/100\n","1/1 [==============================] - 0s 12ms/step - loss: 8.0526 - mae: 8.0526\n","Epoch 60/100\n","1/1 [==============================] - 0s 12ms/step - loss: 7.9337 - mae: 7.9337\n","Epoch 61/100\n","1/1 [==============================] - 0s 13ms/step - loss: 7.8140 - mae: 7.8140\n","Epoch 62/100\n","1/1 [==============================] - 0s 14ms/step - loss: 7.6935 - mae: 7.6935\n","Epoch 63/100\n","1/1 [==============================] - 0s 14ms/step - loss: 7.5722 - mae: 7.5722\n","Epoch 64/100\n","1/1 [==============================] - 0s 11ms/step - loss: 7.4499 - mae: 7.4499\n","Epoch 65/100\n","1/1 [==============================] - 0s 11ms/step - loss: 7.3268 - mae: 7.3268\n","Epoch 66/100\n","1/1 [==============================] - 0s 11ms/step - loss: 7.2027 - mae: 7.2027\n","Epoch 67/100\n","1/1 [==============================] - 0s 12ms/step - loss: 7.0777 - mae: 7.0777\n","Epoch 68/100\n","1/1 [==============================] - 0s 15ms/step - loss: 6.9518 - mae: 6.9518\n","Epoch 69/100\n","1/1 [==============================] - 0s 14ms/step - loss: 6.8249 - mae: 6.8249\n","Epoch 70/100\n","1/1 [==============================] - 0s 9ms/step - loss: 6.6970 - mae: 6.6970\n","Epoch 71/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.6758 - mae: 6.6758\n","Epoch 72/100\n","1/1 [==============================] - 0s 16ms/step - loss: 6.6605 - mae: 6.6605\n","Epoch 73/100\n","1/1 [==============================] - 0s 12ms/step - loss: 6.6454 - mae: 6.6454\n","Epoch 74/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.6306 - mae: 6.6306\n","Epoch 75/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.6160 - mae: 6.6160\n","Epoch 76/100\n","1/1 [==============================] - 0s 9ms/step - loss: 6.6017 - mae: 6.6017\n","Epoch 77/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.6003 - mae: 6.6003\n","Epoch 78/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.6287 - mae: 6.6287\n","Epoch 79/100\n","1/1 [==============================] - 0s 13ms/step - loss: 6.6466 - mae: 6.6466\n","Epoch 80/100\n","1/1 [==============================] - 0s 14ms/step - loss: 6.6551 - mae: 6.6551\n","Epoch 81/100\n","1/1 [==============================] - 0s 12ms/step - loss: 6.6550 - mae: 6.6550\n","Epoch 82/100\n","1/1 [==============================] - 0s 11ms/step - loss: 6.6472 - mae: 6.6472\n","Epoch 83/100\n","1/1 [==============================] - 0s 15ms/step - loss: 6.6324 - mae: 6.6324\n","Epoch 84/100\n","1/1 [==============================] - 0s 12ms/step - loss: 6.6114 - mae: 6.6114\n","Epoch 85/100\n","1/1 [==============================] - 0s 11ms/step - loss: 6.5848 - mae: 6.5848\n","Epoch 86/100\n","1/1 [==============================] - 0s 18ms/step - loss: 6.5532 - mae: 6.5532\n","Epoch 87/100\n","1/1 [==============================] - 0s 14ms/step - loss: 6.5171 - mae: 6.5171\n","Epoch 88/100\n","1/1 [==============================] - 0s 17ms/step - loss: 6.4770 - mae: 6.4770\n","Epoch 89/100\n","1/1 [==============================] - 0s 14ms/step - loss: 6.4652 - mae: 6.4652\n","Epoch 90/100\n","1/1 [==============================] - 0s 12ms/step - loss: 6.4569 - mae: 6.4569\n","Epoch 91/100\n","1/1 [==============================] - 0s 16ms/step - loss: 6.4482 - mae: 6.4482\n","Epoch 92/100\n","1/1 [==============================] - 0s 15ms/step - loss: 6.4391 - mae: 6.4391\n","Epoch 93/100\n","1/1 [==============================] - 0s 13ms/step - loss: 6.4297 - mae: 6.4297\n","Epoch 94/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.4200 - mae: 6.4200\n","Epoch 95/100\n","1/1 [==============================] - 0s 11ms/step - loss: 6.4100 - mae: 6.4100\n","Epoch 96/100\n","1/1 [==============================] - 0s 13ms/step - loss: 6.3997 - mae: 6.3997\n","Epoch 97/100\n","1/1 [==============================] - 0s 14ms/step - loss: 6.3892 - mae: 6.3892\n","Epoch 98/100\n","1/1 [==============================] - 0s 14ms/step - loss: 6.3784 - mae: 6.3784\n","Epoch 99/100\n","1/1 [==============================] - 0s 12ms/step - loss: 6.3674 - mae: 6.3674\n","Epoch 100/100\n","1/1 [==============================] - 0s 11ms/step - loss: 6.3563 - mae: 6.3563\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7ba7d01e2230>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["model.predict([17.0])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gJ8X4GYexVUm","executionInfo":{"status":"ok","timestamp":1707069783657,"user_tz":180,"elapsed":6,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"265cc8a0-6778-4cb9-f3d0-9fbc31883126"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 65ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[30.20785]], dtype=float32)"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["## Evaluating a model\n","* Visualize, Visualize, Visualize\n","* The data\n","* The model\n","* The training of a model\n"],"metadata":{"id":"7MRvmJsh2buU"}},{"cell_type":"code","source":[" # Make a bigger data set\n","\n"," X = tf.range(-100, 100, 4)\n"," X\n","\n"," # Make labels for data set\n","\n","y = X +10\n","X , y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z45mR02G2g0O","executionInfo":{"status":"ok","timestamp":1707069783657,"user_tz":180,"elapsed":3,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"98d42193-9030-4584-a98d-d31358be5723"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(50,), dtype=int32, numpy=\n"," array([-100,  -96,  -92,  -88,  -84,  -80,  -76,  -72,  -68,  -64,  -60,\n","         -56,  -52,  -48,  -44,  -40,  -36,  -32,  -28,  -24,  -20,  -16,\n","         -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24,   28,\n","          32,   36,   40,   44,   48,   52,   56,   60,   64,   68,   72,\n","          76,   80,   84,   88,   92,   96], dtype=int32)>,\n"," <tf.Tensor: shape=(50,), dtype=int32, numpy=\n"," array([-90, -86, -82, -78, -74, -70, -66, -62, -58, -54, -50, -46, -42,\n","        -38, -34, -30, -26, -22, -18, -14, -10,  -6,  -2,   2,   6,  10,\n","         14,  18,  22,  26,  30,  34,  38,  42,  46,  50,  54,  58,  62,\n","         66,  70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["plt.scatter(X, y)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"esqUvFFH3wMq","executionInfo":{"status":"ok","timestamp":1707069784024,"user_tz":180,"elapsed":369,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"50b7613b-0c06-4044-8485-db9e970f1d8c"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7ba7744966b0>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### The 3 sets...\n","* **Training set** - the model learns from this data, which is typically 70-80% of the total data\n","* **Validation set** - the model gets tuned on this data, which is the 10-15%\n","* **Test set** - the model gets evaluated on this data, which is the 10-15% of the data"],"metadata":{"id":"qyO8CqFU4Dwe"}},{"cell_type":"code","source":["# Split the data into the train and test set\n","X_train = X[:40] #First 40 are training samples (80%)\n","y_train = y[:40]\n","\n","X_test = X[40:] # The last testing sample (20%)\n","y_test = y[40:]\n","\n","X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VAbf-nGK4K1e","executionInfo":{"status":"ok","timestamp":1707069784024,"user_tz":180,"elapsed":4,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"01c42461-8c47-4a18-beae-598818b635a2"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=int32, numpy=array([60, 64, 68, 72, 76, 80, 84, 88, 92, 96], dtype=int32)>"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["### Visualing the data\n"],"metadata":{"id":"SJjpCl_S5syR"}},{"cell_type":"code","source":["plt.figure(figsize=(10,7))\n","plt.scatter(X_train, y_train,c ='b', label = 'Traning Data')\n","plt.scatter(X_test, y_test, c= 'g', label = 'Testing Data')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"Dr-C20cx5_oq","executionInfo":{"status":"ok","timestamp":1707069784256,"user_tz":180,"elapsed":235,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"fa81362a-5d7b-4ed4-8c95-71abdeb0871b"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["## Let's have a look at how to build a neural network for our data\n","tf.random.set_seed(42)\n","# 1. Creates a model\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10, input_shape=[1], name ='input_layer'),\n","    tf.keras.layers.Dense(1, name = 'output_layer')\n","], name='Model_1')\n","\n","# 2. Compile the model\n","model.compile(loss = 'mae',\n","              optimizer= tf.keras.optimizers.Adam(learning_rate=0.01),\n","              metrics=['mae'])\n","# 3. Fit the model\n","\n","model.fit(X_train, y_train, epochs= 100, verbose = 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CdphBtQ16ZVf","executionInfo":{"status":"ok","timestamp":1707069786172,"user_tz":180,"elapsed":1918,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"b0266ce5-b426-4829-fa95-f1ab37df7328"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7ba7743dc730>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LPugpAmq92S6","executionInfo":{"status":"ok","timestamp":1707069786172,"user_tz":180,"elapsed":5,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"68a0a8e4-b05a-4090-ca6e-b996482d5673"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"Model_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_layer (Dense)         (None, 10)                20        \n","                                                                 \n"," output_layer (Dense)        (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31 (124.00 Byte)\n","Trainable params: 31 (124.00 Byte)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["### Model visualization"],"metadata":{"id":"qGOOKQGs93yM"}},{"cell_type":"code","source":["from tensorflow.keras.utils import plot_model\n","plot_model(model = model, show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"MpgdDBypBH1m","executionInfo":{"status":"ok","timestamp":1707069786647,"user_tz":180,"elapsed":477,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"650d5acd-e7f7-423f-b658-893ab1f50c4b"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"image/png":"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s88kirBnfHx88M033+jcC6Gvjh49isbGRuTm5sLa2lpbPnfuXJ22qqys7Pe2NGREur/+z8jIwPz58wf+pgDsuRMcHAzgn498Zu3x8WfYuuifzGf6zJQxxvSFkyljjImAkyljjImAkyljjImg09/mZ2Rk6DMO9hzQ/KyPx1bnNDf84DYyTF3dkKXTb/MZY4x1rKNv89slU8YMCU8VYoMET41ijDExcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERcDJljDERmEgdAGMa5eXlSE1N1SkrKCgAAMTHx+uU29jY4IMPPtBbbIx1R0ZEJHUQjAFAS0sL7O3t8fDhQ5iamna6XmNjI0JDQ7F79249RsdYlzL5Yz4zGCYmJnjnnXdgbGyMxsbGTl8A8O6770ocLWO6OJkyg/LOO++gubm5y3Xs7e3x2muv6SkixnqGkykzKFOnTsWIESM6XW5mZoZFixbByIiHLjMsPCKZQZHJZFi4cGGn10ybmprwzjvv6DkqxrrHyZQZnK4+6ru6uuKll17Sc0SMdY+TKTM448ePx+jRo9uVm5mZ4T/+4z8kiIix7nEyZQZp0aJF7T7qNzU1ISQkRKKIGOsaJ1NmkBYuXIiWlhbt3zKZDF5eXhg1apSEUTHWOU6mzCA5Oztj4sSJkMlkAABjY2P+iM8MGidTZrD+9re/wdjYGADQ2tqKt99+W+KIGOscJ1NmsN5++220tbVBJpNh2rRpcHR0lDokxjrFyZQZLHt7e8yYMQNExB/xmeEjCQQFBREAfvGLX/wS/ZWeni5FWsuQ7BZ8U6ZMwcqVK6XaPOvCjh07AMAg+qe+vh579uzBihUrpA5Fx7lz55CUlIT09HSpQ2FPmT9/vmTbliyZjhgxgr9QMFCZmZkAYDD98y//8i/4y1/+InUY7SQlJRlMG7EnpEymfM2UGTxDTKSM/RknU8YYEwEnU8YYEwEnU8YYEwEnU8YYE8GgSaYnT56E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\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["### Visualizing the predictions of our model"],"metadata":{"id":"-DW3JfpVBp7s"}},{"cell_type":"code","source":["# Make some predictions\n","y_pred = model.predict(X_test)\n","y_pred, y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gfN9jicxBQ2A","executionInfo":{"status":"ok","timestamp":1707069786647,"user_tz":180,"elapsed":7,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"283003af-e45d-492f-8260-d0907198d42a"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 49ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["(array([[ 68.746346],\n","        [ 72.64665 ],\n","        [ 76.54696 ],\n","        [ 80.447266],\n","        [ 84.347565],\n","        [ 88.24788 ],\n","        [ 92.148186],\n","        [ 96.04849 ],\n","        [ 99.94881 ],\n","        [103.849106]], dtype=float32),\n"," <tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>)"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Let's create a plotting function\n","def plot_pred(train_data = X_train, train_labels= y_train, test_data = X_test,test_labels = y_test, predictions = y_pred):\n","\n","  \"\"\" Plots training data, test data and predictions \"\"\"\n","  plt.figure(figsize=(10,7))\n","  plt.scatter(train_data, train_labels, c= 'b', label = 'Traning Data')\n","  plt.scatter(test_data, test_labels, c= 'g', label = 'Testing Data')\n","  plt.scatter(test_data, predictions, c= 'r', label = 'Predictions Data')\n","  plt.legend();\n","\n","plot_pred()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"m2r7jhZ8B9Ec","executionInfo":{"status":"ok","timestamp":1707069786989,"user_tz":180,"elapsed":347,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"ec4d5106-43f7-4dc5-ad40-c6e0dce2dfa8"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0EAAAJGCAYAAACdj47VAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABo1klEQVR4nO3de3yT5Rn/8W8abAXpQRBoaAIFD4CKJ1R+MKPlJxOd00qsc+IJD+gUHBXdlM15nMN5Wqs/p3MquM0T1kfH3IYDBI2KJyYeC4K2tMQAGw4KKqf0+f1xm9g0LW1p0iTN5/165dU+93M96Z0QsRf3/VyXw7ZtWwAAAACQIbKSPQEAAAAA6EokQQAAAAAyCkkQAAAAgIxCEgQAAAAgo5AEAQAAAMgoJEEAAAAAMgpJEAAAAICM0iPZE+isxsZGffHFF8rNzZXD4Uj2dAAAAAAkiW3b2rJliwYOHKisrNbXe9I+Cfriiy/k8XiSPQ0AAAAAKaK+vl5ut7vV82mfBOXm5koyLzQvLy/JswEAAACQLA0NDfJ4PJEcoTVpnwSFt8Dl5eWRBAEAAABo8zYZCiMAAAAAyCgkQQAAAAAyCkkQAAAAgIyS9vcEtVcoFNLOnTuTPQ1kqL322ktOpzPZ0wAAAIAyIAmybVvr1q3Tpk2bkj0VZLiCggIVFhbSzwoAACDJun0SFE6A+vfvr169evELKLqcbdv6+uuvtWHDBkmSy+VK8owAAAAyW7dOgkKhUCQB6tu3b7KngwzWs2dPSdKGDRvUv39/tsYBAAAkUbcujBC+B6hXr15Jngnw3eeQe9MAAACSq1snQWFsgUMq4HMIAACQGjIiCQIAAACAMJIgSJJqa2vlcDi0fPnyZE8FAAAASCiSoBTjcDh2+7j55psT8nM9Ho+CwaAOPfTQhDx/WDjZCj9yc3N1yCGHaOrUqVq1alWHn6+4uFgVFRXxnygAAAC6rW5dHS5eQiHJ75eCQcnlkrxeKVHFvYLBYOT7Z555RjfeeKNWrlwZGevdu3fke9u2FQqF1KNH5/8YnU6nCgsLO/087bVw4UIdcsgh+vrrr/Xhhx+qsrJShx9+uP72t7/pxBNP7LJ5AAAAIPOwEtQGy5KKi6Vx46RJk8zX4mIzngiFhYWRR35+vhwOR+R4xYoVys3N1T//+U+NGjVKOTk5eu211/TZZ5+ptLRUAwYMUO/evXXMMcdo4cKFUc9bXFys3/zmN7r44ouVm5urQYMG6eGHH46cb74dbsmSJXI4HFq0aJGOPvpo9erVS2PHjo1KyCTp17/+tfr376/c3Fxdeumluv7663XEEUe0+Tr79u2rwsJCDR06VKWlpVq4cKFGjx6tSy65RKFQSJLafF0lJSVas2aNrr766sjKkiRt3LhR55xzjoqKitSrVy+NHDlSTz311J78cQAAAKAbIgnaDcuSysqktWujxwMBM56oRKgt119/ve644w5VV1frsMMO09atW/WDH/xAixYt0nvvvaeTTz5Zp512murq6qKuu+eee3T00Ufrvffe05VXXqkrrrgiJqlp7pe//KXuuecevfvuu+rRo4cuvvjiyLknnnhCt99+u377299q2bJlGjRokB588ME9ek1ZWVmaPn261qxZo2XLlklSm6/Lsiy53W7deuutCgaDkVW0bdu2adSoUfr73/+ujz76SJdddpnOP/98vf3223s0NwAAAHQzdprbvHmzLcnevHlzzLlvvvnG/uSTT+xvvvmmw8+7a5dtu922LbX8cDhs2+MxcYkye/ZsOz8/P3K8ePFiW5L9wgsvtHntIYccYt9///2R48GDB9vnnXde5LixsdHu37+//eCDD9q2bds1NTW2JPu9996L+lkLFy6MXPP3v//dlhR5P0ePHm1PnTo16ud+73vfsw8//PBW59X85zRVXV1tS7KfeeaZDr2u3/3ud63Gh5166qn2Nddc02ZcInXm8wgAAIC27S43aIqVoFb4/bErQE3ZtlRfb+K62tFHHx11vHXrVl177bUaMWKECgoK1Lt3b1VXV8esBB122GGR78Pb7DZs2LDbn9X0GpfLJUmRa1auXKljjz02Kr75cUfYth2Zm9T+19VcKBTSbbfdppEjR6pPnz7q3bu3XnrppTavAwAAQGagMEIrmtQniEtcPO2zzz5Rx9dee60WLFigu+++WwcccIB69uypsrIy7dixIypur732ijp2OBxqbGzc7c9qek04OWnrmj1VXV0tSRoyZIik9r+u5u666y5VVlaqoqJCI0eO1D777KPy8vI2rwMAAEDHhBpD8tf5FdwSlCvXJe8gr5xZCaogFkckQa34dtEjbnGJ9Prrr2vy5MmaOHGiJLOCUltbm/CfO2zYML3zzju64IILImPvvPPOHj1XY2Oj7rvvPg0ZMkRHHnmkpPa9ruzs7EghhbDXX39dpaWlOu+88yLP/emnn+rggw/eo7kBAAAgllVtafr86Vrb8N32KXeeW5UnV8o3wpfEmbWN7XCt8Holt1v6dvEjhsMheTwmLtkOPPBAWZal5cuX6/3339ekSZMStlrT1FVXXaVHH31Ujz/+uFatWqVf//rX+uCDDyIrRruzceNGrVu3Tp9//rnmzZun8ePH6+2339ajjz4q57f1x9vzuoqLi/Xqq68qEAjov//9b+S6BQsW6I033lB1dbUuv/xyrV+/Pv5vAAAAQIayqi2VzS2LSoAkKdAQUNncMlnVSaog1k4kQa1wOqXKSvN989/pw8cVFYnrF9QR9957r/bdd1+NHTtWp512miZMmKCjjjoq4T/33HPP1cyZM3XttdfqqKOOUk1NjSZPnqy99967zWvHjx8vl8ulkSNH6vrrr9eIESP0wQcfaNy4cZGY9ryuW2+9VbW1tdp///3Vr18/SdINN9ygo446ShMmTFBJSYkKCwt1xhlnxPW1AwAAZKpQY0jT50+XLTvmXHisfH65Qo2hmPOpwmGH70ZPUw0NDcrPz9fmzZuVl5cXdW7btm2qqanRkCFD2vWLeUssS5o+PbpIgsdjEiBfaq/yJcX3v/99FRYW6s9//nOyp5Jy4vF5BAAASLYltUs07vFxbcYtvnCxSopLEj+hJnaXGzTFPUFt8Pmk0lJTBS4YNPcAeb2psQKUbF9//bUeeughTZgwQU6nU0899ZQWLlyoBQsWJHtqAAAASJDglu8qg2U1St41kmurFOwt+QdLjVmxcamGJKgdnE6ppCTZs0g9DodD//jHP3T77bdr27ZtGjZsmJ577jmNHz8+2VMDAABAgrhyTWWwiZ9IlfMlT8N35+rzpOknS88f/F1cKiIJwh7r2bOnFi5cmOxpAAAAoAt5B3l1aW1f/WHuxphzRQ1S1VzpJ5P7yjsoBSqItYLCCAAAAADazWlLlf803zdPJsLHFfNNXKoiCQIAAADQfn6/eq3f2GoikSWp17qN5qb6FMV2OAAAACCDhRpD8tf5FdwSlCvXJe8gr5xZu6kCFmxnwYP2xiUBSRAAAACQoaxqS9PnT49qeurOc6vy5Er5RrTSD8bVzoIH7Y1LArbDAQAAABnIqrZUNrcsKgGSpEBDQGVzy2RVWy1f6PVKbrfkcLR83uEwjTW9FEYAAAAAkCJCjSFNnz9dtmKrF4THyueXK9QYir3Y6ZQqK833zROh8HFFRUo31iQJynA333yzjjjiiGRPAwAAAF3IX+ePWQFqypat+oZ6+etaKW7g80lVVVJRUfS4223Gfa1spUsRJEEpxuFw7PZx8803d+q5X3jhhaixa6+9VosWLercpNvh5ptvjryGHj16aL/99tPxxx+viooKbd++vUPPtWTJEjkcDm3atCkxkwUAAOjmglu+K1qQ1SidUCP9+EPzNaux5bgYPp9UWystXiw9+aT5WlOT8gmQ1Ikk6NVXX9Vpp52mgQMHtvjLtW3buvHGG+VyudSzZ0+NHz9eq1atior58ssvde655yovL08FBQW65JJLtHXr1j2dUsKEGkNaUrtET334lJbULml5WTBOgsFg5FFRUaG8vLyosWuvvTauP693797q27dvXJ+zNYcccoiCwaDq6uq0ePFinXXWWZo1a5bGjh2rLVu2dMkcAAAAILlyTdGCiZ9ItRXSkselp54zX2srzHjTuFY5nVJJiXTOOeZrCm+Ba2qPk6CvvvpKhx9+uB544IEWz995552677779NBDD+mtt97SPvvsowkTJmjbtm2RmHPPPVcff/yxFixYoBdffFGvvvqqLrvssj2dUkJY1ZaKK4s17vFxmmRN0rjHx6m4srj1G8U6qbCwMPLIz8+Xw+GIGnv66ac1YsQI7b333ho+fLh+//vfR67dsWOHpk2bJpfLpb333luDBw/WrFmzJEnFxcWSpIkTJ8rhcESOm2+Hmzx5ss444wzdfffdcrlc6tu3r6ZOnaqdO3dGYoLBoE499VT17NlTQ4YM0ZNPPqni4mJVVFTs9rX16NFDhYWFGjhwoEaOHKmrrrpKr7zyij766CP99re/jcT9+c9/1tFHH63c3FwVFhZq0qRJ2rBhgySptrZW48aNkyTtu+++cjgcmjx5siRp/vz5Ou6441RQUKC+ffvqhz/8oT777LM9+WMAAADo1ryDvLq0tq+q5kpFDdHnihqkqrnSlNq+8g5K3eIGnbHHSdApp5yiX//615o4cWLMOdu2VVFRoRtuuEGlpaU67LDD9Kc//UlffPFFZMWourpa8+fP1yOPPKLRo0fruOOO0/3336+nn35aX3zxxR6/oHja44oZCfLEE0/oxhtv1O23367q6mr95je/0a9+9Ss9/vjjkqT77rtP8+bN09y5c7Vy5Uo98cQTkWTnnXfekSTNnj1bwWAwctySxYsX67PPPtPixYv1+OOPa86cOZozZ07k/AUXXKAvvvhCS5Ys0XPPPaeHH344kqR01PDhw3XKKafIsr57L3fu3KnbbrtN77//vl544QXV1tZGEh2Px6PnnntOkrRy5UoFg0FVfntj3ldffaUZM2bo3Xff1aJFi5SVlaWJEyeqsbEx5ucCAABkMqctVf7TfN88IQgfV8w3cd1RQvoE1dTUaN26dRo/fnxkLD8/X6NHj9bSpUv14x//WEuXLlVBQYGOPvroSMz48eOVlZWlt956q8XkSpK2b98edQ9JQ0NDi3Gd1VbFDIccKp9frtJhpbtvJhVHN910k+655x75vt1nOWTIEH3yySf6wx/+oAsvvFB1dXU68MADddxxx8nhcGjw4MGRa/v16ydJKigoUGFh4W5/zr777qv/9//+n5xOp4YPH65TTz1VixYt0pQpU7RixQotXLhQ77zzTuTP7pFHHtGBBx64x69r+PDh+te//hU5vvjiiyPfDx06VPfdd5+OOeYYbd26Vb1791afPn0kSf3791dBQUEk9swzz4x63scee0z9+vXTJ598okMPPXSP5wcAANDt+P3qtX5jq6ezJPVat1Hy+802t24mIYUR1q1bJ0kaMGBA1PiAAQMi59atW6f+/ftHne/Ro4f69OkTiWnJrFmzlJ+fH3l4PJ44z97odMWMOPvqq6/02Wef6ZJLLlHv3r0jj1//+teRLV+TJ0/W8uXLNWzYMP30pz+NSiw64pBDDpGzyX5Ol8sVWelZuXKlevTooaOOOipy/oADDtC+++67x6/Ntm05mpRXXLZsmU477TQNGjRIubm5OuGEEyRJdXV1u32eVatW6ZxzztHQoUOVl5cXWQVr6zoAAIDuoEP3sQd3U/BgT+LSTEJWghJp5syZmjFjRuS4oaEhIYnQbith7EFcZ4ULRvzxj3/U6NGjo86FE5ajjjpKNTU1+uc//6mFCxfqRz/6kcaPH6+qqqoO/ay99tor6tjhcCR0S1l1dbWGDBkiySR7EyZM0IQJE/TEE0+oX79+qqur04QJE7Rjx47dPs9pp52mwYMH649//KMGDhyoxsZGHXrooW1eBwAAkO6sakvT50+P+kd8d55blSdXyjeihWptrjYKHnQ0Ls0kZCUovN1q/fr1UePr16+PnCssLIy5j2TXrl368ssvd7tdKycnR3l5eVGPRGizEkYH4zprwIABGjhwoD7//HMdcMABUY9wAiFJeXl5Ovvss/XHP/5RzzzzjJ577jl9+eWXkkxyEwp1rrLdsGHDtGvXLr333nuRsdWrV+t///vfHj3fihUrNH/+/MhWthUrVmjjxo2644475PV6NXz48JjPSXZ2tiRFvZaNGzdq5cqVuuGGG3TiiSdqxIgRezwnAACAdLJH97F7vaanT/Nmp2EOh+TxmLhuKCFJ0JAhQ1RYWBjVf6ahoUFvvfWWxowZI0kaM2aMNm3apGXLlkViXn75ZTU2NsasdCSDd5BX7jy3HGr5g+GQQ548T5dWzLjllls0a9Ys3Xffffr000/14Ycfavbs2br33nslSffee6+eeuoprVixQp9++qmeffZZFRYWRu6bKS4u1qJFi7Ru3bo9ThCGDx+u8ePH67LLLtPbb7+t9957T5dddpl69uwZtaWtJbt27dK6dev0xRdf6MMPP9T999+vE044QUcccYR+9rOfSZIGDRqk7Oxs3X///fr88881b9483XbbbVHPM3jwYDkcDr344ov6z3/+o61bt2rfffdV37599fDDD2v16tV6+eWXo1YMAQAAuqO27mOXpPL55bFb45xO6dviUjGJUPi4oiJtSl531B4nQVu3btXy5cu1fPlySaYYwvLly1VXVyeHw6Hy8nL9+te/1rx58/Thhx/qggsu0MCBA3XGGWdIkkaMGKGTTz5ZU6ZM0dtvv63XX39d06ZN049//GMNHDgwHq+tU5xZTlWebD4YzROh8HHFyRVdVhRBki699FI98sgjmj17tkaOHKkTTjhBc+bMiawE5ebm6s4779TRRx+tY445RrW1tfrHP/6hrCzzx3zPPfdowYIF8ng8OvLII/d4Hn/60580YMAAHX/88Zo4caKmTJmi3Nxc7b333ru97uOPP5bL5dKgQYNUUlKiuXPnaubMmfL7/erdu7ckU8Bhzpw5evbZZ3XwwQfrjjvu0N133x31PEVFRbrlllt0/fXXa8CAAZo2bZqysrL09NNPa9myZTr00EN19dVX66677trj1wgAAJAOOnUfu88nVVVJRUXR4263GU+Dpqd7ymHb9h4VvluyZEmkX0tTF154oebMmSPbtnXTTTfp4Ycf1qZNm3Tcccfp97//vQ466KBI7Jdffqlp06bpb3/7m7KysnTmmWfqvvvui/xC3B4NDQ3Kz8/X5s2bY7bGbdu2TTU1NRoyZEibv6C3pqX9lZ48jypOrmh5f2UGWrt2rTwejxYuXKgTTzwx2dNJWfH4PAIAADT11IdPaZI1SZKU1Sh510iurVKwt+QfLDV+u+TxpO9JnTPynJafJBQyVeCCQXMPkNebtitAu8sNmtrjJChVJDoJkswyo7/Or+CWoFy5LnkHebt0BSjVvPzyy9q6datGjhypYDCon//85woEAvr0009jiirgOyRBAAAg3pbULtG4x8dp4idS5XzJ06R7TH2eNP1k6fmDpcUXLlZJcUnS5tlV2psEpV11uGRwZjkz4kPTXjt37tQvfvELff7558rNzdXYsWP1xBNPkAABAAB0Me8gry6t7as/zI3t+VPUIFXNlX4yuW+X3seeDkiC0GHhEtYAAABILqctVf7TfN/8Zv8sSY2SKuabOHwnIdXhAAAAAHQBv1+91m9s9Zf6LEm91m009/wggpUgAAAAIEV0+F70YLB9T9zeuAxBEgQAAACkgJaqErvz3Ko8ubL1qsQuV/uevL1xGYLtcAAAAECSWdWWyuaWxfT8CTQEVDa3TFa11fKFXq/p69Na03qHQ/J4TBwiSIIAAACAJAo1hjR9/nTZiq1eEB4rn1+uUGMo9mKnU6qsNN83T4TCxxUVadv3J1FIggAAAIAk8tf5IytAWY3SCTXSjz80X7MaTSJU31Avf10rxQ18PqmqSioqih53u824r5WtdBmMe4Iy3OTJk7Vp0ya98MILkqSSkhIdccQRqqio2OPnjMdzAAAAZIrgFlO0oK2Gp+G4Fvl8UmmpqQIXDJp7gLxeVoBawUpQCpo8ebIcDoccDoeys7N1wAEH6NZbb9WuXbsS/rMty9Jtt93WrtglS5bI4XBo06ZNe/wciRJ+/xwOh/bZZx8deOCBmjx5spYtW9bh5yopKVF5eXn8JwkAACDJlevSxE9MY9Oihuhz4YanEz8xcbvldEolJdI555ivJECtIglqj1BIWrJEeuop8zXUwn7MODv55JMVDAa1atUqXXPNNbr55pt11113tRi7Y8eOuP3cPn36KDc3N+nPEQ+zZ89WMBjUxx9/rAceeEBbt27V6NGj9ac//SnZUwMAAIjwFo3V/3vJJCwtNTyVpPv/5ZS3aGyXzqs7Iwlqi2VJxcXSuHHSpEnma3GxGU+gnJwcFRYWavDgwbriiis0fvx4zZs3T5JZKTrjjDN0++23a+DAgRo2bJgkqb6+Xj/60Y9UUFCgPn36qLS0VLW1tZHnDIVCmjFjhgoKCtS3b1/9/Oc/l21H34DXfNVj+/btuu666+TxeJSTk6MDDjhAjz76qGprazVu3DhJ0r777iuHw6HJkye3+Bz/+9//dMEFF2jfffdVr169dMopp2jVqlWR83PmzFFBQYFeeukljRgxQr17944kgWFLlizRscceq3322UcFBQX63ve+pzVr1uz2PSwoKFBhYaGKi4t10kknqaqqSueee66mTZum//3vf5KkjRs36pxzzlFRUZF69eqlkSNH6qmnnoo8x+TJk/XKK6+osrIysrJUW1urUCikSy65REOGDFHPnj01bNgwVYZvSgQAAOgA5+tvaODm0G4bnhZtCsn5+htdOa1ujSRodyxLKiuT1kaXKlQgYMYTnAg11bNnz6gVn0WLFmnlypVasGCBXnzxRe3cuVMTJkxQbm6u/H6/Xn/99UgyEb7unnvu0Zw5c/TYY4/ptdde05dffqnnn39+tz/3ggsu0FNPPaX77rtP1dXV+sMf/qDevXvL4/HoueeekyStXLlSwWCw1SRg8uTJevfddzVv3jwtXbpUtm3rBz/4gXbu3BmJ+frrr3X33Xfrz3/+s1599VXV1dXp2muvlSTt2rVLZ5xxhk444QR98MEHWrp0qS677DI5WisFuRtXX321tmzZogULFkiStm3bplGjRunvf/+7PvroI1122WU6//zz9fbbb0uSKisrNWbMGE2ZMkXBYFDBYFAej0eNjY1yu9169tln9cknn+jGG2/UL37xC82dO7fDcwIAABmOhqddjsIIrQmFpOnTJTu2VKFs25QcLC83N6AlcL+lbdtatGiRXnrpJV111VWR8X322UePPPKIsrOzJUl/+ctf1NjYqEceeSSSHMyePVsFBQVasmSJTjrpJFVUVGjmzJnyfVsh5KGHHtJLL73U6s/+9NNPNXfuXC1YsEDjx4+XJA0dOjRyvk+fPpKk/v37q6CgoMXnWLVqlebNm6fXX39dY8eaJdwnnnhCHo9HL7zwgs466yxJ0s6dO/XQQw9p//33lyRNmzZNt956qySpoaFBmzdv1g9/+MPI+REjRnTgXfzO8OHDJSmyQlZUVBRJtiTpqquu0ksvvaS5c+fq2GOPVX5+vrKzs9WrVy8VFhZG4pxOp2655ZbI8ZAhQ7R06VLNnTtXP/rRj/ZobgAAoPsINYbkr/MruCUoV65L3kFeObNa+Z2RhqddjiSoNX5/7ApQU7Yt1debuJKSuP/4F198Ub1799bOnTvV2NioSZMm6eabb46cHzlyZCQBkqT3339fq1evjrkXZ9u2bfrss8+0efNmBYNBjR49OnKuR48eOvroo2O2xIUtX75cTqdTJ5xwwh6/jurqavXo0SPq5/bt21fDhg1TdXV1ZKxXr16RBEeSXC6XNmzYIMkkW5MnT9aECRP0/e9/X+PHj9ePfvQjufbgL4Lwaw0niqFQSL/5zW80d+5cBQIB7dixQ9u3b1evXr3afK4HHnhAjz32mOrq6vTNN99ox44dOuKIIzo8JwAA0L1Y1Zamz58e1fjUnedW5cmV8o1ooVx1uOFpINDyP8A7HOY8DU/jhu1wrUnysuS4ceO0fPlyrVq1St98840ef/xx7bPPPpHzTb+XpK1bt2rUqFFavnx51OPTTz/VpEmT9mgOPXv27NRr6Ii99tor6tjhcEQlZ7Nnz9bSpUs1duxYPfPMMzrooIP05ptvdvjnhBOvIUOGSJLuuusuVVZW6rrrrtPixYu1fPlyTZgwoc1iE08//bSuvfZaXXLJJfrXv/6l5cuX66KLLoprkQoAAJB+rGpLZXPLohIgSQo0BFQ2t0xWdQu3U9DwtMuRBLUmycuS++yzjw444AANGjRIPXq0vWB31FFHadWqVerfv78OOOCAqEd+fr7y8/Plcrn01ltvRa7ZtWvXbktGjxw5Uo2NjXrllVdaPB9eiQrtplreiBEjtGvXrqifu3HjRq1cuVIHH3xwm6+rqSOPPFIzZ87UG2+8oUMPPVRPPvlkh66XpIqKCuXl5UW2973++usqLS3Veeedp8MPP1xDhw7Vp59+GnVNdnZ2zGsMb++78sordeSRR+qAAw7QZ5991uH5AACA7iPUGNL0+dNlK3Y1JzxWPr9cocYWfnei4WmXIglqTXhZsrWb7x0OyeNJmWXJc889V/vtt59KS0vl9/tVU1OjJUuW6Kc//anWfrutb/r06brjjjv0wgsvaMWKFbryyitjevw0VVxcrAsvvFAXX3yxXnjhhchzhm/+Hzx4sBwOh1588UX95z//0datW2Oe48ADD1RpaammTJmi1157Te+//77OO+88FRUVqbS0tF2vraamRjNnztTSpUu1Zs0a/etf/9KqVavavC9o06ZNWrdundasWaMFCxaorKxMTz75pB588MHIPUwHHnigFixYoDfeeEPV1dW6/PLLtX79+pj34a233lJtba3++9//qrGxUQceeKDeffddvfTSS/r000/1q1/9Su+88067Xg8AAOie/HX+yApQVqN0Qo304w/N16xGkwjVN9TLX+dv+Ql8Pqm2Vlq8WHrySfO1poYEKAFIglqTZsuSvXr10quvvqpBgwbJ5/NpxIgRuuSSS7Rt2zbl5eVJkq655hqdf/75uvDCCzVmzBjl5uZq4sSJu33eBx98UGVlZbryyis1fPhwTZkyRV999ZUkU1Tglltu0fXXX68BAwZo2rRpLT7H7NmzNWrUKP3whz/UmDFjZNu2/vGPf8Rsgdvda1uxYoXOPPNMHXTQQbrssss0depUXX755bu97qKLLpLL5dLw4cN1xRVXqHfv3nr77bejtgfecMMNOuqoozRhwgSVlJSosLBQZ5xxRtTzXHvttXI6nTr44IPVr18/1dXV6fLLL5fP59PZZ5+t0aNHa+PGjbryyivb9XoAAED3FNxibpOY+IlUWyEteVx66jnztbbCjDeNaxENT7uEw27trvg00dDQoPz8fG3evDnyy37Ytm3bVFNToyFDhmjvvffesx9gWaZKXNMiCR6PSYDIytEBcfk8AgCAlLWkdonuu26cqr7tmNF0taHx269lP5J++tvFKiku6eLZZYbd5QZNUR2uLT6fKYPt95siCC6X2QJHVg4AAIAmvEVjddBLTkmxjU+zZBKh+//lVOFfxnb95BCFJKg9wsuSAAAAQCucr7+hgZtbLxiVJaloU0h6/Q1+t0wy7gkCAAAA4iHJLVbQfqwEAQAAAK0INYbkr/MruCUoV65L3kFeObNauS0iyS1W0H4ZkQSlee0HdBN8DgEASC9WtaXp86dHNT5157lVeXKlfCNaKJAVbrESCEgt/X/f4TDnU6TFSibr1tvhwiWYv/766yTPBPjuc9je0uAAACB5rGpLZXPLohIgSQo0BFQ2t0xWtRV7UZq1WMlk3XolyOl0qqCgQBs2bJBk+s04Wmt+CiSIbdv6+uuvtWHDBhUUFMjJX3wAAKS0UGNI0+dP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UG5urgoLC1s898QTT2jHjh167LHHlJ2drUMOOUTLly/XvffeSxKEjBAKSdOnxyZAkhlzOKTycrPljRUeAACA+EloYYQ77rhDffv21ZFHHqm77rpLu3btipxbunSpjj/+eGVnZ0fGJkyYoJUrV+p///tfq8+5fft2NTQ0RD2AdOT3S2vXtn7etqX6ehMHAACA+EnYStBPf/pTHXXUUerTp4/eeOMNzZw5U8FgUPfee68kad26dRoyZEjUNQMGDIic23fffVt83lmzZumWW25J1LSBLhMMxjcOAAAA7dOhlaDrr78+pthB88eKFSskSTNmzFBJSYkOO+ww/eQnP9E999yj+++/X9u3b+/UhGfOnKnNmzdHHvX19Z16PiBZXK74xgEAAKB9OrQSdM0112jy5Mm7jRk6dGiL46NHj9auXbtUW1urYcOGqbCwUOvXr4+KCR+3dh+RJOXk5CgnJ6cj0wZSktdr+voEAi3fF+RwmPNeb9fPDQAAoDvrUBLUr18/9evXb49+0PLly5WVlaX+/ftLksaMGaNf/vKX2rlzp/baay9J0oIFCzRs2LBWt8IB3YnTKVVWmipwDkd0IuRwmK8VFRRFAAAAiLeEFEZYunSpKioq9P777+vzzz/XE088oauvvlrnnXdeJMGZNGmSsrOzdckll+jjjz/WM888o8rKSs2YMSMRUwJSks9nymAXFUWPu92UxwYAAEgUh223tBGnc/7973/ryiuv1IoVK7R9+3YNGTJE559/vmbMmBG1le2DDz7Q1KlT9c4772i//fbTVVddpeuuu65DP6uhoUH5+fnavHmz8vLy4v1SgHYLhUwlt2DQ3Mfj9bZ/Facz1wIAAMBob26QkCSoK5EEIRVYlun507TktdtttruxmgMAANA12psbJLRPEJAJLMvc19O8508gYMYtKznzAgAAQMtIgoBOCIXMClBL66nhsfJyEwcAAIDUQBIEdILfH7sC1JRtS/X1Jg4AAACpgSQI6IRgML5xAAAASDySIKATXK74xgEAACDxSIKATvB6TRW4cHPT5hwOyeMxcQAAAEgNJEFAJzidpgy2FJsIhY8rKuj5AwAAkEpIgoBO8vmkqiqpqCh63O024/QJAgAASC09kj0BINWEQqaaWzBo7uXxetteyfH5pNLSjl8HAACArkcSBDRhWabvT9Oy12632fLW1oqO0ymV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VF9fr7y8vKTOpTvjfe4avM9dg/e5a/A+Jx7vcdfgfe4avM9dIxHvs23b2rJliwYOHKisrNbv/En7laCsrCy53e5kTyNKXl4e/8F0Ad7nrsH73DV4n7sG73Pi8R53Dd7nrsH73DXi/T7vbgUojMIIAAAAADIKSRAAAACAjEISFEc5OTm66aablJOTk+ypdGu8z12D97lr8D53Dd7nxOM97hq8z12D97lrJPN9TvvCCAAAAADQEawEAQAAAMgoJEEAAAAAMgpJEAAAAICMQhIEAAAAIKOQBAEAAADIKCRBe+j222/X2LFj1atXLxUUFLQYU1dXp1NPPVW9evVS//799bOf/Uy7du2KilmyZImOOuoo5eTk6IADDtCcOXMSP/k0tWTJEjkcjhYf77zzjiSptra2xfNvvvlmkmefXoqLi2PewzvuuCMq5oMPPpDX69Xee+8tj8ejO++8M0mzTU+1tbW65JJLNGTIEPXs2VP777+/brrpJu3YsSMqhs9z5z3wwAMqLi7W3nvvrdGjR+vtt99O9pTS2qxZs3TMMccoNzdX/fv31xlnnKGVK1dGxZSUlMR8bn/yk58kacbp6eabb455D4cPHx45v23bNk2dOlV9+/ZV7969deaZZ2r9+vVJnHF6aun/dw6HQ1OnTpXEZ3lPvPrqqzrttNM0cOBAORwOvfDCC1HnbdvWjTfeKJfLpZ49e2r8+PFatWpVVMyXX36pc889V3l5eSooKNAll1yirVu3xnWeJEF7aMeOHTrrrLN0xRVXtHg+FArp1FNP1Y4dO/TGG2/o8ccf15w5c3TjjTdGYmpqanTqqadq3LhxWr58ucrLy3XppZfqpZde6qqXkVbGjh2rYDAY9bj00ks1ZMgQHX300VGxCxcujIobNWpUkmadvm699dao9/Cqq66KnGtoaNBJJ52kwYMHa9myZbrrrrt088036+GHH07ijNPLihUr1NjYqD/84Q/6+OOP9bvf/U4PPfSQfvGLX8TE8nnec88884xmzJihm266Sf/+9791+OGHa8KECdqwYUOyp5a2XnnlFU2dOlVvvvmmFixYoJ07d+qkk07SV199FRU3ZcqUqM8t/1DScYccckjUe/jaa69Fzl199dX629/+pmeffVavvPKKvvjiC/l8viTONj298847Ue/xggULJElnnXVWJIbPcsd89dVXOvzww/XAAw+0eP7OO+/Ufffdp4ceekhvvfWW9tlnH02YMEHbtm2LxJx77rn6+OOPtWDBAr344ot69dVXddlll8V3ojY6Zfbs2XZ+fn7M+D/+8Q87KyvLXrduXWTswQcftPPy8uzt27fbtm3bP//5z+1DDjkk6rqzzz7bnjBhQkLn3F3s2LHD7tevn33rrbdGxmpqamxJ9nvvvZe8iXUDgwcPtn/3u9+1ev73v/+9ve+++0Y+y7Zt29ddd509bNiwLphd93XnnXfaQ4YMiRzzee68Y4891p46dWrkOBQK2QMHDrRnzZqVxFl1Lxs2bLAl2a+88kpk7IQTTrCnT5+evEl1AzfddJN9+OGHt3hu06ZN9l577WU/++yzkbHq6mpbkr106dIummH3NH36dHv//fe3Gxsbbdvms9xZkuznn38+ctzY2GgXFhbad911V2Rs06ZNdk5Ojv3UU0/Ztm3bn3zyiS3JfueddyIx//znP22Hw2EHAoG4zY2VoARZunSpRo4cqQEDBkTGJkyYoIaGBn388ceRmPHjx0ddN2HCBC1durRL55qu5s2bp40bN+qiiy6KOXf66aerf//+Ou644zRv3rwkzC793XHHHerbt6+OPPJI3XXXXVFbOZcuXarjjz9e2dnZkbEJEyZo5cqV+t///peM6XYLmzdvVp8+fWLG+TzvmR07dmjZsmVRf89mZWVp/Pjx/D0bR5s3b5akmM/uE088of3220+HHnqoZs6cqa+//joZ00trq1at0sCBAzV06FCde+65qqurkyQtW7ZMO3fujPpsDx8+XIMGDeKz3Qk7duzQX/7yF1188cVyOByRcT7L8VNTU6N169ZFfXbz8/M1evToyGd36dKlKigoiNrlM378eGVlZemtt96K21x6xO2ZEGXdunVRCZCkyPG6det2G9PQ0KBvvvlGPXv27JrJpqlHH31UEyZMkNvtjoz17t1b99xzj773ve8pKytLzz33nM444wy98MILOv3005M42/Ty05/+VEcddZT69OmjN954QzNnzlQwGNS9994ryXx2hwwZEnVN08/3vvvu2+VzTnerV6/W/fffr7vvvjsyxue5c/773/8qFAq1+PfsihUrkjSr7qWxsVHl5eX63ve+p0MPPTQyPmnSJA0ePFgDBw7UBx98oOuuu04rV66UZVlJnG16GT16tObMmaNhw4YpGAzqlltukdfr1UcffaR169YpOzs75p7kAQMGRH7HQMe98MIL2rRpkyZPnhwZ47McX+HPZ0t/Lzf9/bh///5R53v06KE+ffrE9fNNEtTE9ddfr9/+9re7jamuro66MRGdtyfv+9q1a/XSSy9p7ty5UXH77befZsyYETk+5phj9MUXX+iuu+7K+F8aO/I+N30PDzvsMGVnZ+vyyy/XrFmzlJOTk+ipprU9+TwHAgGdfPLJOuusszRlypTIOJ9npLqpU6fqo48+irpXRVLU3v2RI0fK5XLpxBNP1Geffab999+/q6eZlk455ZTI94cddphGjx6twYMHa+7cufwjaYI8+uijOuWUUzRw4MDIGJ/l7oskqIlrrrkmKvtvydChQ9v1XIWFhTEViMJVWwoLCyNfm1dyWb9+vfLy8jLqL7g9ed9nz56tvn37tusXwdGjR0dudMxknfl8jx49Wrt27VJtba2GDRvW6mdX+u7znak6+j5/8cUXGjdunMaOHduuwhJ8nttvv/32k9PpbPGzmumf03iYNm1a5IblpivyLRk9erQks+LJL457pqCgQAcddJBWr16t73//+9qxY4c2bdoUtRrEZ3vPrVmzRgsXLmxzhYfPcueEP5/r16+Xy+WKjK9fv15HHHFEJKZ58Zpdu3bpyy+/jOvnmySoiX79+qlfv35xea4xY8bo9ttv14YNGyJLegsWLFBeXp4OPvjgSMw//vGPqOsWLFigMWPGxGUO6aKj77tt25o9e7YuuOAC7bXXXm3GL1++POo/tEzVmc/38uXLlZWVFfksjxkzRr/85S+1c+fOyJ/BggULNGzYsIzfCteR9zkQCGjcuHEaNWqUZs+eraystm/T5PPcftnZ2Ro1apQWLVqkM844Q5LZvrVo0SJNmzYtuZNLY7Zt66qrrtLzzz+vJUuWxGyNbcny5cslic9uJ2zdulWfffaZzj//fI0aNUp77bWXFi1apDPPPFOStHLlStXV1WXc7xDxMnv2bPXv31+nnnrqbuP4LHfOkCFDVFhYqEWLFkWSnoaGBr311luRistjxozRpk2btGzZskg11JdfflmNjY2RJDQu4lZiIcOsWbPGfu+99+xbbrnF7t27t/3ee+/Z7733nr1lyxbbtm17165d9qGHHmqfdNJJ9vLly+358+fb/fr1s2fOnBl5js8//9zu1auX/bOf/cyurq62H3jgAdvpdNrz589P1stKCwsXLrQl2dXV1THn5syZYz/55JN2dXW1XV1dbd9+++12VlaW/dhjjyVhpunpjTfesH/3u9/Zy5cvtz/77DP7L3/5i92vXz/7ggsuiMRs2rTJHjBggH3++efbH330kf3000/bvXr1sv/whz8kcebpZe3atfYBBxxgn3jiifbatWvtYDAYeYTxee68p59+2s7JybHnzJljf/LJJ/Zll11mFxQURFXuRMdcccUVdn5+vr1kyZKoz+3XX39t27Ztr1692r711lvtd999166pqbH/+te/2kOHDrWPP/74JM88vVxzzTX2kiVL7JqaGvv111+3x48fb++33372hg0bbNu27Z/85Cf2oEGD7Jdfftl+99137TFjxthjxoxJ8qzTUygUsgcNGmRfd911UeN8lvfMli1bIr8XS7Lvvfde+7333rPXrFlj27Zt33HHHXZBQYH917/+1f7ggw/s0tJSe8iQIfY333wTeY6TTz7ZPvLII+233nrLfu211+wDDzzQPuecc+I6T5KgPXThhRfakmIeixcvjsTU1tbap5xyit2zZ097v/32s6+55hp7586dUc+zePFi+4gjjrCzs7PtoUOH2rNnz+7aF5KGzjnnHHvs2LEtnpszZ449YsQIu1evXnZeXp597LHHRpUQRduWLVtmjx492s7Pz7f33ntve8SIEfZvfvMbe9u2bVFx77//vn3cccfZOTk5dlFRkX3HHXckacbpafbs2S3+HdL036b4PMfH/fffbw8aNMjOzs62jz32WPvNN99M9pTSWmuf2/D/v+rq6uzjjz/e7tOnj52Tk2MfcMAB9s9+9jN78+bNyZ14mjn77LNtl8tlZ2dn20VFRfbZZ59tr169OnL+m2++sa+88kp73333tXv16mVPnDgx6h9R0H4vvfSSLcleuXJl1Dif5T2zePHiFv+OuPDCC23bNmWyf/WrX9kDBgywc3Jy7BNPPDHmvd+4caN9zjnn2L1797bz8vLsiy66KLLQEC8O27bt+K0rAQAAAEBqo08QAAAAgIxCEgQAAAAgo5AEAQAAAMgoJEEAAAAAMgpJEAAAAICMQhIEAAAAIKOQBAEAAADIKCRBAAAAADIKSRAAAACAjEISBAAAACCjkAQBAAAAyCj/H1xhVD8JKGNlAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Evaluating model prediction with regression evaluation\n","* Different evaluation metrics to evaluate your model's performance\n","* MAE - mean absolute error - how wrong is our prediction\n","* MSE - mean square error - square the averga error\n","* Huber - combination of MSE and MAE\n"],"metadata":{"id":"qQFo76EDCkwJ"}},{"cell_type":"code","source":["# Evaluate the model on the test set with MAE for our model construction\n","model.evaluate(X_test, y_test)"],"metadata":{"id":"JYSR0LwhHV6t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707069787205,"user_tz":180,"elapsed":218,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"78cd32f0-546a-49c4-da9f-b106c9ae3478"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 129ms/step - loss: 1.7023 - mae: 1.7023\n"]},{"output_type":"execute_result","data":{"text/plain":["[1.7022743225097656, 1.7022743225097656]"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# prompt: Calculate the mean abosule error\n","\n","mae_error = tf.keras.metrics.mean_absolute_error(y_true = y_test, y_pred = tf.squeeze(tf.constant(y_pred)))\n","print(mae_error)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wZd0xYfYHWkq","executionInfo":{"status":"ok","timestamp":1707069787206,"user_tz":180,"elapsed":4,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"830d2b82-f0d2-43dd-e414-989a1b0f922c"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(1.7022743, shape=(), dtype=float32)\n"]}]},{"cell_type":"code","source":["# prompt: Calculate mean square error now\n","\n","mse_error = tf.keras.metrics.mean_squared_error(y_true=y_test, y_pred=tf.squeeze(tf.constant(y_pred)))\n","print(mse_error)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b8VZ-mMqJrag","executionInfo":{"status":"ok","timestamp":1707069788036,"user_tz":180,"elapsed":833,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"0495ad11-07c1-4697-de73-98e1b14373fb"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(2.979732, shape=(), dtype=float32)\n"]}]},{"cell_type":"code","source":["# prompt: Create a function to reuse MAE and MSE separe both functions\n","\n","def mae(y_true, y_pred):\n","  \"\"\"\n","  Calculates the mean absolute error between the true and predicted values.\n","\n","  Args:\n","    y_true: The ground truth values.\n","    y_pred: The predicted values.\n","\n","  Returns:\n","    The mean absolute error.\n","  \"\"\"\n","  y_true = tf.cast(y_true, tf.float32)\n","  y_pred = tf.cast(y_pred, tf.float32)\n","  return tf.reduce_mean(tf.abs(y_true - y_pred))\n","\n","def mse(y_true, y_pred):\n","  \"\"\"\n","  Calculates the mean squared error between the true and predicted values.\n","\n","  Args:\n","    y_true: The ground truth values.\n","    y_pred: The predicted values.\n","\n","  Returns:\n","    The mean squared error.\n","  \"\"\"\n","  y_true = tf.cast(y_true, tf.float32)\n","  y_pred = tf.cast(y_pred, tf.float32)\n","  return tf.reduce_mean(tf.square(y_true - y_pred))\n"],"metadata":{"id":"DSNzFl6hKMA_","executionInfo":{"status":"ok","timestamp":1707069788036,"user_tz":180,"elapsed":3,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["## Running Experiments to improve our model"],"metadata":{"id":"0OyiJ3wFK56e"}},{"cell_type":"markdown","source":["Tipycal work flow:\n","\n","\n","```\n","Build a model > Fit it > Evaluate it > Tweak it > Fit it > Evaluate it > Tweak it > Fit it > Evaluated....\n","```\n","\n"],"metadata":{"id":"18US4LydLA06"}},{"cell_type":"markdown","source":["1. Get more data\n","2. Make your model larger (more layer or more units)\n","3. Train for longer\n"],"metadata":{"id":"M6ysNW4YLbbv"}},{"cell_type":"code","source":["X_train, y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jr6US02DM_wQ","executionInfo":{"status":"ok","timestamp":1707069788036,"user_tz":180,"elapsed":3,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"3f27df19-71a6-4b73-f955-ab80638513e7"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(40,), dtype=int32, numpy=\n"," array([-100,  -96,  -92,  -88,  -84,  -80,  -76,  -72,  -68,  -64,  -60,\n","         -56,  -52,  -48,  -44,  -40,  -36,  -32,  -28,  -24,  -20,  -16,\n","         -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24,   28,\n","          32,   36,   40,   44,   48,   52,   56], dtype=int32)>,\n"," <tf.Tensor: shape=(40,), dtype=int32, numpy=\n"," array([-90, -86, -82, -78, -74, -70, -66, -62, -58, -54, -50, -46, -42,\n","        -38, -34, -30, -26, -22, -18, -14, -10,  -6,  -2,   2,   6,  10,\n","         14,  18,  22,  26,  30,  34,  38,  42,  46,  50,  54,  58,  62,\n","         66], dtype=int32)>)"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["### Model 1 Experiment"],"metadata":{"id":"htkqt-QRM_Uf"}},{"cell_type":"code","source":["tf.random.set_seed(42)\n","\n","model_1 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(1, input_shape=(1,))\n","])\n","\n","model_1.compile(loss = tf.keras.losses.mae,\n","                optimizer = tf.keras.optimizers.SGD(),\n","                metrics = ['mae'])\n","\n","model_1.fit(X_train, y_train, epochs = 100, verbose = 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rtcTHFBrK8Yr","executionInfo":{"status":"ok","timestamp":1707069789356,"user_tz":180,"elapsed":1322,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"50d14366-7b5a-4841-f42d-df3cd21b9e93"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7ba7741f0790>"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["y_pred1 = model_1.predict(X_test)\n","plot_pred(predictions = y_pred1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"JHEf1hpuOL0L","executionInfo":{"status":"ok","timestamp":1707069789842,"user_tz":180,"elapsed":489,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"7f281deb-d977-41e6-b170-04db825139b9"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 36ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mae_1 = mae(y_test, tf.squeeze(tf.constant(y_pred1)))\n","mse_1 = mse(y_test, tf.squeeze(tf.constant(y_pred1)))\n","\n","mae_1, mse_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hbNeC-5bPiR-","executionInfo":{"status":"ok","timestamp":1707069789842,"user_tz":180,"elapsed":5,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"282ce88c-17fd-43d3-f642-d516f7d99aa8"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=14.908559>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=223.09824>)"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["### Model 2 Experiment - 2 layers, 100 epochs\n"],"metadata":{"id":"XUXbDC-zQVrh"}},{"cell_type":"code","source":["tf.random.set_seed(42)\n","\n","model_2 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10, input_shape=(1,)),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","model_2.compile(loss = tf.keras.losses.mae,\n","                optimizer = tf.keras.optimizers.SGD(),\n","                metrics = ['mse'])\n","\n","model_2.fit(X_train, y_train, epochs = 100, verbose = 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"doHHu7n1Q22D","executionInfo":{"status":"ok","timestamp":1707069791240,"user_tz":180,"elapsed":1401,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"35e05e0e-62a1-4ded-d29b-ea6d718bb9c3"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7ba774127a60>"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["y_pred2 = model_2.predict(X_test)\n","plot_pred(predictions = y_pred2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":656},"id":"24wwe3clQ__j","executionInfo":{"status":"ok","timestamp":1707069791827,"user_tz":180,"elapsed":591,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"cb92eb37-21aa-438d-b538-0ee7793a37a0"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7ba7742fb760> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 50ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mae_2 = mae(y_test, tf.squeeze(tf.constant(y_pred2)))\n","mse_2 = mse(y_test, tf.squeeze(tf.constant(y_pred2)))\n","\n","mae_2, mse_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IHilpMfdR5hw","executionInfo":{"status":"ok","timestamp":1707069792056,"user_tz":180,"elapsed":231,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"a3c03c36-d5bb-4d19-edfa-96130e24c179"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=10.139954>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=110.160324>)"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["### Model 3 Experiment - 2 layers, 500 epochs\n"],"metadata":{"id":"QsnsJktnSEnH"}},{"cell_type":"code","source":["\n","# 1. Create a model using the Sequential API\n","model_3 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1),\n","])\n","\n","# 2. Compile the model\n","\n","model_3.compile(loss = 'mae', #mae is Mean Absolute Error\n","              optimizer = tf.keras.optimizers.Adam(lr = 0.01), #SGD is Stochastic Gradient Descent\n","              metrics = ['mae'])\n","\n","# 3. Fit the model\n","model_3.fit(tf.expand_dims(X_train, axis=-1),y_train, epochs = 1000)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P8tucU3OSMBX","executionInfo":{"status":"ok","timestamp":1707069826217,"user_tz":180,"elapsed":34164,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"eb0f254e-1157-491b-b013-99b53ad55154"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/1000\n","2/2 [==============================] - 1s 9ms/step - loss: 38.0771 - mae: 38.0771\n","Epoch 2/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 37.4276 - mae: 37.4276\n","Epoch 3/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 36.8029 - mae: 36.8029\n","Epoch 4/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 36.1619 - mae: 36.1619\n","Epoch 5/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 35.5352 - mae: 35.5352\n","Epoch 6/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 34.9016 - mae: 34.9016\n","Epoch 7/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 34.2610 - mae: 34.2610\n","Epoch 8/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 33.6021 - mae: 33.6021\n","Epoch 9/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 32.9902 - mae: 32.9902\n","Epoch 10/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 32.3776 - mae: 32.3776\n","Epoch 11/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 31.7151 - mae: 31.7151\n","Epoch 12/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 31.0926 - mae: 31.0926\n","Epoch 13/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 30.4354 - mae: 30.4354\n","Epoch 14/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 29.8089 - mae: 29.8089\n","Epoch 15/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 29.1813 - mae: 29.1813\n","Epoch 16/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 28.5248 - mae: 28.5248\n","Epoch 17/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 27.8791 - mae: 27.8791\n","Epoch 18/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 27.2440 - mae: 27.2440\n","Epoch 19/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 26.6159 - mae: 26.6159\n","Epoch 20/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 25.9593 - mae: 25.9593\n","Epoch 21/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 25.3229 - mae: 25.3229\n","Epoch 22/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 24.7123 - mae: 24.7123\n","Epoch 23/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 24.0959 - mae: 24.0959\n","Epoch 24/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 23.4597 - mae: 23.4597\n","Epoch 25/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 22.8321 - mae: 22.8321\n","Epoch 26/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 22.2238 - mae: 22.2238\n","Epoch 27/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 21.5787 - mae: 21.5787\n","Epoch 28/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 20.9669 - mae: 20.9669\n","Epoch 29/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 20.2839 - mae: 20.2839\n","Epoch 30/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 19.6321 - mae: 19.6321\n","Epoch 31/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 19.0358 - mae: 19.0358\n","Epoch 32/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 18.3889 - mae: 18.3889\n","Epoch 33/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 17.7245 - mae: 17.7245\n","Epoch 34/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 17.1094 - mae: 17.1094\n","Epoch 35/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 16.4684 - mae: 16.4684\n","Epoch 36/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 15.9021 - mae: 15.9021\n","Epoch 37/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 15.2780 - mae: 15.2780\n","Epoch 38/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 14.7019 - mae: 14.7019\n","Epoch 39/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 14.1258 - mae: 14.1258\n","Epoch 40/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 13.5577 - mae: 13.5577\n","Epoch 41/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 13.0008 - mae: 13.0008\n","Epoch 42/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 12.4623 - mae: 12.4623\n","Epoch 43/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 11.8871 - mae: 11.8871\n","Epoch 44/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 11.3881 - mae: 11.3881\n","Epoch 45/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 10.8711 - mae: 10.8711\n","Epoch 46/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 10.4119 - mae: 10.4119\n","Epoch 47/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 9.9067 - mae: 9.9067\n","Epoch 48/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 9.5135 - mae: 9.5135\n","Epoch 49/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 9.1315 - mae: 9.1315\n","Epoch 50/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 8.7768 - mae: 8.7768\n","Epoch 51/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 8.4520 - mae: 8.4520\n","Epoch 52/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 8.2526 - mae: 8.2526\n","Epoch 53/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 7.9961 - mae: 7.9961\n","Epoch 54/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.8425 - mae: 7.8425\n","Epoch 55/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.7254 - mae: 7.7254\n","Epoch 56/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 7.6408 - mae: 7.6408\n","Epoch 57/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 7.6199 - mae: 7.6199\n","Epoch 58/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 7.6489 - mae: 7.6489\n","Epoch 59/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.6895 - mae: 7.6895\n","Epoch 60/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 7.7243 - mae: 7.7243\n","Epoch 61/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.7415 - mae: 7.7415\n","Epoch 62/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.7257 - mae: 7.7257\n","Epoch 63/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.6762 - mae: 7.6762\n","Epoch 64/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.6229 - mae: 7.6229\n","Epoch 65/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.5571 - mae: 7.5571\n","Epoch 66/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 7.5129 - mae: 7.5129\n","Epoch 67/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 7.4984 - mae: 7.4984\n","Epoch 68/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.4780 - mae: 7.4780\n","Epoch 69/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.4729 - mae: 7.4729\n","Epoch 70/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.4771 - mae: 7.4771\n","Epoch 71/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 7.4624 - mae: 7.4624\n","Epoch 72/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.4476 - mae: 7.4476\n","Epoch 73/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.4278 - mae: 7.4278\n","Epoch 74/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 7.4130 - mae: 7.4130\n","Epoch 75/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.3977 - mae: 7.3977\n","Epoch 76/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 7.3813 - mae: 7.3813\n","Epoch 77/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.3715 - mae: 7.3715\n","Epoch 78/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.3572 - mae: 7.3572\n","Epoch 79/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.3459 - mae: 7.3459\n","Epoch 80/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.3345 - mae: 7.3345\n","Epoch 81/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.3226 - mae: 7.3226\n","Epoch 82/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 7.3116 - mae: 7.3116\n","Epoch 83/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.2987 - mae: 7.2987\n","Epoch 84/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.2907 - mae: 7.2907\n","Epoch 85/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 7.2779 - mae: 7.2779\n","Epoch 86/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 7.2662 - mae: 7.2662\n","Epoch 87/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.2601 - mae: 7.2601\n","Epoch 88/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.2439 - mae: 7.2439\n","Epoch 89/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.2310 - mae: 7.2310\n","Epoch 90/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.2249 - mae: 7.2249\n","Epoch 91/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 7.2144 - mae: 7.2144\n","Epoch 92/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 7.2050 - mae: 7.2050\n","Epoch 93/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 7.1926 - mae: 7.1926\n","Epoch 94/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.1775 - mae: 7.1775\n","Epoch 95/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.1668 - mae: 7.1668\n","Epoch 96/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 7.1646 - mae: 7.1646\n","Epoch 97/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.1486 - mae: 7.1486\n","Epoch 98/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.1374 - mae: 7.1374\n","Epoch 99/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.1277 - mae: 7.1277\n","Epoch 100/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.1153 - mae: 7.1153\n","Epoch 101/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.1041 - mae: 7.1041\n","Epoch 102/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 7.0967 - mae: 7.0967\n","Epoch 103/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 7.0889 - mae: 7.0889\n","Epoch 104/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.0770 - mae: 7.0770\n","Epoch 105/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.0647 - mae: 7.0647\n","Epoch 106/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.0531 - mae: 7.0531\n","Epoch 107/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 7.0441 - mae: 7.0441\n","Epoch 108/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 7.0345 - mae: 7.0345\n","Epoch 109/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 7.0224 - mae: 7.0224\n","Epoch 110/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 7.0147 - mae: 7.0147\n","Epoch 111/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 7.0057 - mae: 7.0057\n","Epoch 112/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 6.9944 - mae: 6.9944\n","Epoch 113/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 6.9828 - mae: 6.9828\n","Epoch 114/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 6.9794 - mae: 6.9794\n","Epoch 115/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.9681 - mae: 6.9681\n","Epoch 116/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.9584 - mae: 6.9584\n","Epoch 117/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.9468 - mae: 6.9468\n","Epoch 118/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 6.9371 - mae: 6.9371\n","Epoch 119/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 6.9249 - mae: 6.9249\n","Epoch 120/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.9150 - mae: 6.9150\n","Epoch 121/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.9059 - mae: 6.9059\n","Epoch 122/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.8982 - mae: 6.8982\n","Epoch 123/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 6.8862 - mae: 6.8862\n","Epoch 124/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 6.8787 - mae: 6.8787\n","Epoch 125/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.8699 - mae: 6.8699\n","Epoch 126/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.8630 - mae: 6.8630\n","Epoch 127/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.8524 - mae: 6.8524\n","Epoch 128/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.8344 - mae: 6.8344\n","Epoch 129/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.8267 - mae: 6.8267\n","Epoch 130/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 6.8367 - mae: 6.8367\n","Epoch 131/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.8365 - mae: 6.8365\n","Epoch 132/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.8316 - mae: 6.8316\n","Epoch 133/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.8253 - mae: 6.8253\n","Epoch 134/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.8187 - mae: 6.8187\n","Epoch 135/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.8101 - mae: 6.8101\n","Epoch 136/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.7903 - mae: 6.7903\n","Epoch 137/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.7638 - mae: 6.7638\n","Epoch 138/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.7485 - mae: 6.7485\n","Epoch 139/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.7352 - mae: 6.7352\n","Epoch 140/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.7346 - mae: 6.7346\n","Epoch 141/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.7431 - mae: 6.7431\n","Epoch 142/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.7335 - mae: 6.7335\n","Epoch 143/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.7129 - mae: 6.7129\n","Epoch 144/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.6881 - mae: 6.6881\n","Epoch 145/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.6887 - mae: 6.6887\n","Epoch 146/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.6746 - mae: 6.6746\n","Epoch 147/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.6694 - mae: 6.6694\n","Epoch 148/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.6701 - mae: 6.6701\n","Epoch 149/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.6627 - mae: 6.6627\n","Epoch 150/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 6.6529 - mae: 6.6529\n","Epoch 151/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.6421 - mae: 6.6421\n","Epoch 152/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.6297 - mae: 6.6297\n","Epoch 153/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.6149 - mae: 6.6149\n","Epoch 154/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.5983 - mae: 6.5983\n","Epoch 155/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.5854 - mae: 6.5854\n","Epoch 156/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.5723 - mae: 6.5723\n","Epoch 157/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.5811 - mae: 6.5811\n","Epoch 158/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.5664 - mae: 6.5664\n","Epoch 159/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.5593 - mae: 6.5593\n","Epoch 160/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.5508 - mae: 6.5508\n","Epoch 161/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.5425 - mae: 6.5425\n","Epoch 162/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.5316 - mae: 6.5316\n","Epoch 163/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.5218 - mae: 6.5218\n","Epoch 164/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.5093 - mae: 6.5093\n","Epoch 165/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 6.4989 - mae: 6.4989\n","Epoch 166/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 6.4843 - mae: 6.4843\n","Epoch 167/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.4747 - mae: 6.4747\n","Epoch 168/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.4651 - mae: 6.4651\n","Epoch 169/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.4561 - mae: 6.4561\n","Epoch 170/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.4514 - mae: 6.4514\n","Epoch 171/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.4416 - mae: 6.4416\n","Epoch 172/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.4303 - mae: 6.4303\n","Epoch 173/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.4197 - mae: 6.4197\n","Epoch 174/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.4117 - mae: 6.4117\n","Epoch 175/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.4028 - mae: 6.4028\n","Epoch 176/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.3891 - mae: 6.3891\n","Epoch 177/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 6.3855 - mae: 6.3855\n","Epoch 178/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.3739 - mae: 6.3739\n","Epoch 179/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.3637 - mae: 6.3637\n","Epoch 180/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.3535 - mae: 6.3535\n","Epoch 181/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.3452 - mae: 6.3452\n","Epoch 182/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.3374 - mae: 6.3374\n","Epoch 183/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.3334 - mae: 6.3334\n","Epoch 184/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.3249 - mae: 6.3249\n","Epoch 185/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.3168 - mae: 6.3168\n","Epoch 186/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.3073 - mae: 6.3073\n","Epoch 187/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.3002 - mae: 6.3002\n","Epoch 188/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.2972 - mae: 6.2972\n","Epoch 189/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.2914 - mae: 6.2914\n","Epoch 190/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.2778 - mae: 6.2778\n","Epoch 191/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.2606 - mae: 6.2606\n","Epoch 192/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.2414 - mae: 6.2414\n","Epoch 193/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.2366 - mae: 6.2366\n","Epoch 194/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.2243 - mae: 6.2243\n","Epoch 195/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.2211 - mae: 6.2211\n","Epoch 196/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.2288 - mae: 6.2288\n","Epoch 197/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.2269 - mae: 6.2269\n","Epoch 198/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.2174 - mae: 6.2174\n","Epoch 199/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.2045 - mae: 6.2045\n","Epoch 200/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 6.1932 - mae: 6.1932\n","Epoch 201/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.1762 - mae: 6.1762\n","Epoch 202/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 6.1595 - mae: 6.1595\n","Epoch 203/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 6.1362 - mae: 6.1362\n","Epoch 204/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.1221 - mae: 6.1221\n","Epoch 205/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.1324 - mae: 6.1324\n","Epoch 206/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.1491 - mae: 6.1491\n","Epoch 207/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.1489 - mae: 6.1489\n","Epoch 208/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 6.1296 - mae: 6.1296\n","Epoch 209/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.0933 - mae: 6.0933\n","Epoch 210/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.0763 - mae: 6.0763\n","Epoch 211/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.0753 - mae: 6.0753\n","Epoch 212/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 6.0590 - mae: 6.0590\n","Epoch 213/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.0504 - mae: 6.0504\n","Epoch 214/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.0407 - mae: 6.0407\n","Epoch 215/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 6.0316 - mae: 6.0316\n","Epoch 216/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 6.0254 - mae: 6.0254\n","Epoch 217/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 6.0181 - mae: 6.0181\n","Epoch 218/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 6.0076 - mae: 6.0076\n","Epoch 219/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.9982 - mae: 5.9982\n","Epoch 220/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.9864 - mae: 5.9864\n","Epoch 221/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.9768 - mae: 5.9768\n","Epoch 222/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.9676 - mae: 5.9676\n","Epoch 223/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.9597 - mae: 5.9597\n","Epoch 224/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.9493 - mae: 5.9493\n","Epoch 225/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.9418 - mae: 5.9418\n","Epoch 226/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.9288 - mae: 5.9288\n","Epoch 227/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.9167 - mae: 5.9167\n","Epoch 228/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.9077 - mae: 5.9077\n","Epoch 229/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.9003 - mae: 5.9003\n","Epoch 230/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.8916 - mae: 5.8916\n","Epoch 231/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.8795 - mae: 5.8795\n","Epoch 232/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.8734 - mae: 5.8734\n","Epoch 233/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.8631 - mae: 5.8631\n","Epoch 234/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.8541 - mae: 5.8541\n","Epoch 235/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 5.8449 - mae: 5.8449\n","Epoch 236/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 5.8386 - mae: 5.8386\n","Epoch 237/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.8338 - mae: 5.8338\n","Epoch 238/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.8271 - mae: 5.8271\n","Epoch 239/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.8171 - mae: 5.8171\n","Epoch 240/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.8055 - mae: 5.8055\n","Epoch 241/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.7884 - mae: 5.7884\n","Epoch 242/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.7797 - mae: 5.7797\n","Epoch 243/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.7713 - mae: 5.7713\n","Epoch 244/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 5.7722 - mae: 5.7722\n","Epoch 245/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.7590 - mae: 5.7590\n","Epoch 246/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.7441 - mae: 5.7441\n","Epoch 247/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.7238 - mae: 5.7238\n","Epoch 248/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.7155 - mae: 5.7155\n","Epoch 249/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.7271 - mae: 5.7271\n","Epoch 250/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.7440 - mae: 5.7440\n","Epoch 251/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.7551 - mae: 5.7551\n","Epoch 252/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 5.7392 - mae: 5.7392\n","Epoch 253/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.7001 - mae: 5.7001\n","Epoch 254/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.6862 - mae: 5.6862\n","Epoch 255/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.6615 - mae: 5.6615\n","Epoch 256/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.6479 - mae: 5.6479\n","Epoch 257/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.6414 - mae: 5.6414\n","Epoch 258/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.6354 - mae: 5.6354\n","Epoch 259/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.6259 - mae: 5.6259\n","Epoch 260/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.6116 - mae: 5.6116\n","Epoch 261/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.6020 - mae: 5.6020\n","Epoch 262/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.5925 - mae: 5.5925\n","Epoch 263/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.5838 - mae: 5.5838\n","Epoch 264/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.5791 - mae: 5.5791\n","Epoch 265/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.5752 - mae: 5.5752\n","Epoch 266/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.5610 - mae: 5.5610\n","Epoch 267/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.5466 - mae: 5.5466\n","Epoch 268/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.5366 - mae: 5.5366\n","Epoch 269/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.5225 - mae: 5.5225\n","Epoch 270/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 5.5133 - mae: 5.5133\n","Epoch 271/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.5000 - mae: 5.5000\n","Epoch 272/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.4968 - mae: 5.4968\n","Epoch 273/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 5.4989 - mae: 5.4989\n","Epoch 274/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.5121 - mae: 5.5121\n","Epoch 275/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.4941 - mae: 5.4941\n","Epoch 276/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.4749 - mae: 5.4749\n","Epoch 277/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.4472 - mae: 5.4472\n","Epoch 278/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.4364 - mae: 5.4364\n","Epoch 279/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.4286 - mae: 5.4286\n","Epoch 280/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.4238 - mae: 5.4238\n","Epoch 281/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.4144 - mae: 5.4144\n","Epoch 282/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.4015 - mae: 5.4015\n","Epoch 283/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.3931 - mae: 5.3931\n","Epoch 284/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.3809 - mae: 5.3809\n","Epoch 285/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.3763 - mae: 5.3763\n","Epoch 286/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.3605 - mae: 5.3605\n","Epoch 287/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.3526 - mae: 5.3526\n","Epoch 288/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.3437 - mae: 5.3437\n","Epoch 289/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.3378 - mae: 5.3378\n","Epoch 290/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.3346 - mae: 5.3346\n","Epoch 291/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 5.3259 - mae: 5.3259\n","Epoch 292/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.3247 - mae: 5.3247\n","Epoch 293/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.3193 - mae: 5.3193\n","Epoch 294/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.3113 - mae: 5.3113\n","Epoch 295/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.2997 - mae: 5.2997\n","Epoch 296/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.2909 - mae: 5.2909\n","Epoch 297/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.2906 - mae: 5.2906\n","Epoch 298/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.2755 - mae: 5.2755\n","Epoch 299/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.2555 - mae: 5.2555\n","Epoch 300/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.2370 - mae: 5.2370\n","Epoch 301/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.2217 - mae: 5.2217\n","Epoch 302/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.2141 - mae: 5.2141\n","Epoch 303/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.2083 - mae: 5.2083\n","Epoch 304/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.2053 - mae: 5.2053\n","Epoch 305/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.1860 - mae: 5.1860\n","Epoch 306/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.1694 - mae: 5.1694\n","Epoch 307/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.1604 - mae: 5.1604\n","Epoch 308/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.1723 - mae: 5.1723\n","Epoch 309/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.1737 - mae: 5.1737\n","Epoch 310/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.1541 - mae: 5.1541\n","Epoch 311/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 5.1266 - mae: 5.1266\n","Epoch 312/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 5.1074 - mae: 5.1074\n","Epoch 313/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 5.1070 - mae: 5.1070\n","Epoch 314/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 5.1100 - mae: 5.1100\n","Epoch 315/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.1019 - mae: 5.1019\n","Epoch 316/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.0874 - mae: 5.0874\n","Epoch 317/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.0628 - mae: 5.0628\n","Epoch 318/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.0647 - mae: 5.0647\n","Epoch 319/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 5.0478 - mae: 5.0478\n","Epoch 320/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 5.0472 - mae: 5.0472\n","Epoch 321/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 5.0441 - mae: 5.0441\n","Epoch 322/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 5.0346 - mae: 5.0346\n","Epoch 323/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 5.0162 - mae: 5.0162\n","Epoch 324/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.9890 - mae: 4.9890\n","Epoch 325/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.9881 - mae: 4.9881\n","Epoch 326/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.9849 - mae: 4.9849\n","Epoch 327/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.9894 - mae: 4.9894\n","Epoch 328/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.9826 - mae: 4.9826\n","Epoch 329/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.9644 - mae: 4.9644\n","Epoch 330/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.9363 - mae: 4.9363\n","Epoch 331/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.9293 - mae: 4.9293\n","Epoch 332/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 4.9203 - mae: 4.9203\n","Epoch 333/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 4.9104 - mae: 4.9104\n","Epoch 334/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.9017 - mae: 4.9017\n","Epoch 335/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 4.8869 - mae: 4.8869\n","Epoch 336/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.8740 - mae: 4.8740\n","Epoch 337/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.8635 - mae: 4.8635\n","Epoch 338/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.8487 - mae: 4.8487\n","Epoch 339/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.8423 - mae: 4.8423\n","Epoch 340/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.8346 - mae: 4.8346\n","Epoch 341/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.8253 - mae: 4.8253\n","Epoch 342/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.8151 - mae: 4.8151\n","Epoch 343/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.8063 - mae: 4.8063\n","Epoch 344/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.8006 - mae: 4.8006\n","Epoch 345/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.7832 - mae: 4.7832\n","Epoch 346/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.7744 - mae: 4.7744\n","Epoch 347/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.7591 - mae: 4.7591\n","Epoch 348/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.7476 - mae: 4.7476\n","Epoch 349/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.7346 - mae: 4.7346\n","Epoch 350/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.7279 - mae: 4.7279\n","Epoch 351/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.7205 - mae: 4.7205\n","Epoch 352/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.7096 - mae: 4.7096\n","Epoch 353/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.6953 - mae: 4.6953\n","Epoch 354/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.6858 - mae: 4.6858\n","Epoch 355/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.6732 - mae: 4.6732\n","Epoch 356/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.6658 - mae: 4.6658\n","Epoch 357/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.6546 - mae: 4.6546\n","Epoch 358/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.6423 - mae: 4.6423\n","Epoch 359/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.6331 - mae: 4.6331\n","Epoch 360/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.6235 - mae: 4.6235\n","Epoch 361/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.6121 - mae: 4.6121\n","Epoch 362/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.6025 - mae: 4.6025\n","Epoch 363/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.5985 - mae: 4.5985\n","Epoch 364/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.5925 - mae: 4.5925\n","Epoch 365/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.5842 - mae: 4.5842\n","Epoch 366/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 4.5734 - mae: 4.5734\n","Epoch 367/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 4.5628 - mae: 4.5628\n","Epoch 368/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.5521 - mae: 4.5521\n","Epoch 369/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.5302 - mae: 4.5302\n","Epoch 370/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.5240 - mae: 4.5240\n","Epoch 371/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.5208 - mae: 4.5208\n","Epoch 372/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.5095 - mae: 4.5095\n","Epoch 373/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.4981 - mae: 4.4981\n","Epoch 374/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.4811 - mae: 4.4811\n","Epoch 375/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.4705 - mae: 4.4705\n","Epoch 376/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.4602 - mae: 4.4602\n","Epoch 377/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 4.4508 - mae: 4.4508\n","Epoch 378/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.4397 - mae: 4.4397\n","Epoch 379/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.4277 - mae: 4.4277\n","Epoch 380/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.4097 - mae: 4.4097\n","Epoch 381/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.4072 - mae: 4.4072\n","Epoch 382/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.4202 - mae: 4.4202\n","Epoch 383/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.4074 - mae: 4.4074\n","Epoch 384/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.3850 - mae: 4.3850\n","Epoch 385/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.3607 - mae: 4.3607\n","Epoch 386/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.3465 - mae: 4.3465\n","Epoch 387/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.3504 - mae: 4.3504\n","Epoch 388/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.3629 - mae: 4.3629\n","Epoch 389/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.3711 - mae: 4.3711\n","Epoch 390/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.3605 - mae: 4.3605\n","Epoch 391/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.3670 - mae: 4.3670\n","Epoch 392/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.3406 - mae: 4.3406\n","Epoch 393/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 4.3025 - mae: 4.3025\n","Epoch 394/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.2758 - mae: 4.2758\n","Epoch 395/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.2515 - mae: 4.2515\n","Epoch 396/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.2447 - mae: 4.2447\n","Epoch 397/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.2424 - mae: 4.2424\n","Epoch 398/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.2403 - mae: 4.2403\n","Epoch 399/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.2275 - mae: 4.2275\n","Epoch 400/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.2040 - mae: 4.2040\n","Epoch 401/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.1806 - mae: 4.1806\n","Epoch 402/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.1945 - mae: 4.1945\n","Epoch 403/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 4.1960 - mae: 4.1960\n","Epoch 404/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.1958 - mae: 4.1958\n","Epoch 405/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.1659 - mae: 4.1659\n","Epoch 406/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.1457 - mae: 4.1457\n","Epoch 407/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.1290 - mae: 4.1290\n","Epoch 408/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 4.1323 - mae: 4.1323\n","Epoch 409/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 4.0991 - mae: 4.0991\n","Epoch 410/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 4.0816 - mae: 4.0816\n","Epoch 411/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.1311 - mae: 4.1311\n","Epoch 412/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.1689 - mae: 4.1689\n","Epoch 413/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.1855 - mae: 4.1855\n","Epoch 414/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.1701 - mae: 4.1701\n","Epoch 415/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 4.1189 - mae: 4.1189\n","Epoch 416/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 4.0524 - mae: 4.0524\n","Epoch 417/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 4.0226 - mae: 4.0226\n","Epoch 418/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.0676 - mae: 4.0676\n","Epoch 419/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 4.1180 - mae: 4.1180\n","Epoch 420/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 4.0631 - mae: 4.0631\n","Epoch 421/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 4.0011 - mae: 4.0011\n","Epoch 422/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.9679 - mae: 3.9679\n","Epoch 423/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.9608 - mae: 3.9608\n","Epoch 424/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.9479 - mae: 3.9479\n","Epoch 425/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.9397 - mae: 3.9397\n","Epoch 426/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.9234 - mae: 3.9234\n","Epoch 427/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.9136 - mae: 3.9136\n","Epoch 428/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.9003 - mae: 3.9003\n","Epoch 429/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.8942 - mae: 3.8942\n","Epoch 430/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.8792 - mae: 3.8792\n","Epoch 431/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.8805 - mae: 3.8805\n","Epoch 432/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.8648 - mae: 3.8648\n","Epoch 433/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.8477 - mae: 3.8477\n","Epoch 434/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.8376 - mae: 3.8376\n","Epoch 435/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.8230 - mae: 3.8230\n","Epoch 436/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.8106 - mae: 3.8106\n","Epoch 437/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.7996 - mae: 3.7996\n","Epoch 438/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.8038 - mae: 3.8038\n","Epoch 439/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.8018 - mae: 3.8018\n","Epoch 440/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.7921 - mae: 3.7921\n","Epoch 441/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.7760 - mae: 3.7760\n","Epoch 442/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.7597 - mae: 3.7597\n","Epoch 443/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.7456 - mae: 3.7456\n","Epoch 444/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.7284 - mae: 3.7284\n","Epoch 445/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.7216 - mae: 3.7216\n","Epoch 446/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 3.7056 - mae: 3.7056\n","Epoch 447/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.6918 - mae: 3.6918\n","Epoch 448/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.6804 - mae: 3.6804\n","Epoch 449/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.6690 - mae: 3.6690\n","Epoch 450/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.6573 - mae: 3.6573\n","Epoch 451/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 3.6481 - mae: 3.6481\n","Epoch 452/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.6352 - mae: 3.6352\n","Epoch 453/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.6645 - mae: 3.6645\n","Epoch 454/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.6607 - mae: 3.6607\n","Epoch 455/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.6386 - mae: 3.6386\n","Epoch 456/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.6146 - mae: 3.6146\n","Epoch 457/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.5723 - mae: 3.5723\n","Epoch 458/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.5743 - mae: 3.5743\n","Epoch 459/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.5748 - mae: 3.5748\n","Epoch 460/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.5698 - mae: 3.5698\n","Epoch 461/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.5535 - mae: 3.5535\n","Epoch 462/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 3.5406 - mae: 3.5406\n","Epoch 463/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 3.5169 - mae: 3.5169\n","Epoch 464/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.5125 - mae: 3.5125\n","Epoch 465/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.4995 - mae: 3.4995\n","Epoch 466/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.4767 - mae: 3.4767\n","Epoch 467/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.4592 - mae: 3.4592\n","Epoch 468/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.4508 - mae: 3.4508\n","Epoch 469/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.4380 - mae: 3.4380\n","Epoch 470/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.4260 - mae: 3.4260\n","Epoch 471/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 3.4117 - mae: 3.4117\n","Epoch 472/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.4004 - mae: 3.4004\n","Epoch 473/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.3991 - mae: 3.3991\n","Epoch 474/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.3900 - mae: 3.3900\n","Epoch 475/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 3.3690 - mae: 3.3690\n","Epoch 476/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.3477 - mae: 3.3477\n","Epoch 477/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.3394 - mae: 3.3394\n","Epoch 478/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 3.3620 - mae: 3.3620\n","Epoch 479/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 3.3600 - mae: 3.3600\n","Epoch 480/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.3344 - mae: 3.3344\n","Epoch 481/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.3034 - mae: 3.3034\n","Epoch 482/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 3.2739 - mae: 3.2739\n","Epoch 483/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.2866 - mae: 3.2866\n","Epoch 484/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.2858 - mae: 3.2858\n","Epoch 485/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.2608 - mae: 3.2608\n","Epoch 486/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.2373 - mae: 3.2373\n","Epoch 487/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.2152 - mae: 3.2152\n","Epoch 488/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 3.2093 - mae: 3.2093\n","Epoch 489/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 3.2049 - mae: 3.2049\n","Epoch 490/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.1863 - mae: 3.1863\n","Epoch 491/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.1772 - mae: 3.1772\n","Epoch 492/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.1564 - mae: 3.1564\n","Epoch 493/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.1467 - mae: 3.1467\n","Epoch 494/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.1320 - mae: 3.1320\n","Epoch 495/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 3.1150 - mae: 3.1150\n","Epoch 496/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 3.1032 - mae: 3.1032\n","Epoch 497/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 3.0913 - mae: 3.0913\n","Epoch 498/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 3.0787 - mae: 3.0787\n","Epoch 499/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 3.0738 - mae: 3.0738\n","Epoch 500/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.0927 - mae: 3.0927\n","Epoch 501/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.0751 - mae: 3.0751\n","Epoch 502/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.0444 - mae: 3.0444\n","Epoch 503/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 3.0125 - mae: 3.0125\n","Epoch 504/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 2.9987 - mae: 2.9987\n","Epoch 505/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 2.9973 - mae: 2.9973\n","Epoch 506/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 3.0089 - mae: 3.0089\n","Epoch 507/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 2.9873 - mae: 2.9873\n","Epoch 508/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.9531 - mae: 2.9531\n","Epoch 509/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.9493 - mae: 2.9493\n","Epoch 510/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.9269 - mae: 2.9269\n","Epoch 511/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.9283 - mae: 2.9283\n","Epoch 512/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 2.9031 - mae: 2.9031\n","Epoch 513/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.8903 - mae: 2.8903\n","Epoch 514/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.8816 - mae: 2.8816\n","Epoch 515/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.8693 - mae: 2.8693\n","Epoch 516/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.8522 - mae: 2.8522\n","Epoch 517/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.8401 - mae: 2.8401\n","Epoch 518/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.8294 - mae: 2.8294\n","Epoch 519/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.8307 - mae: 2.8307\n","Epoch 520/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.8059 - mae: 2.8059\n","Epoch 521/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.7830 - mae: 2.7830\n","Epoch 522/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.7774 - mae: 2.7774\n","Epoch 523/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 2.7974 - mae: 2.7974\n","Epoch 524/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.7915 - mae: 2.7915\n","Epoch 525/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.7455 - mae: 2.7455\n","Epoch 526/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.7171 - mae: 2.7171\n","Epoch 527/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.7469 - mae: 2.7469\n","Epoch 528/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.7972 - mae: 2.7972\n","Epoch 529/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.7488 - mae: 2.7488\n","Epoch 530/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.6697 - mae: 2.6697\n","Epoch 531/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 2.6632 - mae: 2.6632\n","Epoch 532/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.6756 - mae: 2.6756\n","Epoch 533/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.6682 - mae: 2.6682\n","Epoch 534/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.6390 - mae: 2.6390\n","Epoch 535/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.6131 - mae: 2.6131\n","Epoch 536/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 2.5884 - mae: 2.5884\n","Epoch 537/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 2.6019 - mae: 2.6019\n","Epoch 538/1000\n","2/2 [==============================] - 0s 17ms/step - loss: 2.5683 - mae: 2.5683\n","Epoch 539/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 2.5490 - mae: 2.5490\n","Epoch 540/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 2.5467 - mae: 2.5467\n","Epoch 541/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 2.5429 - mae: 2.5429\n","Epoch 542/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.5202 - mae: 2.5202\n","Epoch 543/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.4918 - mae: 2.4918\n","Epoch 544/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.4982 - mae: 2.4982\n","Epoch 545/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.4870 - mae: 2.4870\n","Epoch 546/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 2.4617 - mae: 2.4617\n","Epoch 547/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.4396 - mae: 2.4396\n","Epoch 548/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.4323 - mae: 2.4323\n","Epoch 549/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.4256 - mae: 2.4256\n","Epoch 550/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.4061 - mae: 2.4061\n","Epoch 551/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.3780 - mae: 2.3780\n","Epoch 552/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.3789 - mae: 2.3789\n","Epoch 553/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 2.4114 - mae: 2.4114\n","Epoch 554/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 2.4381 - mae: 2.4381\n","Epoch 555/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 2.4154 - mae: 2.4154\n","Epoch 556/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.3579 - mae: 2.3579\n","Epoch 557/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.3004 - mae: 2.3004\n","Epoch 558/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.3072 - mae: 2.3072\n","Epoch 559/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 2.3280 - mae: 2.3280\n","Epoch 560/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.2853 - mae: 2.2853\n","Epoch 561/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.2413 - mae: 2.2413\n","Epoch 562/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.2610 - mae: 2.2610\n","Epoch 563/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.2759 - mae: 2.2759\n","Epoch 564/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.2588 - mae: 2.2588\n","Epoch 565/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.2478 - mae: 2.2478\n","Epoch 566/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.1831 - mae: 2.1831\n","Epoch 567/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.1696 - mae: 2.1696\n","Epoch 568/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.1585 - mae: 2.1585\n","Epoch 569/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.1426 - mae: 2.1426\n","Epoch 570/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.1271 - mae: 2.1271\n","Epoch 571/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.1135 - mae: 2.1135\n","Epoch 572/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.1347 - mae: 2.1347\n","Epoch 573/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.1098 - mae: 2.1098\n","Epoch 574/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.0615 - mae: 2.0615\n","Epoch 575/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 2.1010 - mae: 2.1010\n","Epoch 576/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 2.1279 - mae: 2.1279\n","Epoch 577/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 2.0925 - mae: 2.0925\n","Epoch 578/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 2.0152 - mae: 2.0152\n","Epoch 579/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 1.9981 - mae: 1.9981\n","Epoch 580/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 2.0444 - mae: 2.0444\n","Epoch 581/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 2.0331 - mae: 2.0331\n","Epoch 582/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.9583 - mae: 1.9583\n","Epoch 583/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.9747 - mae: 1.9747\n","Epoch 584/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.9852 - mae: 1.9852\n","Epoch 585/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 1.9605 - mae: 1.9605\n","Epoch 586/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.9163 - mae: 1.9163\n","Epoch 587/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 1.8877 - mae: 1.8877\n","Epoch 588/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 1.9083 - mae: 1.9083\n","Epoch 589/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.8790 - mae: 1.8790\n","Epoch 590/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.8427 - mae: 1.8427\n","Epoch 591/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.8691 - mae: 1.8691\n","Epoch 592/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 1.8740 - mae: 1.8740\n","Epoch 593/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.8166 - mae: 1.8166\n","Epoch 594/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.7918 - mae: 1.7918\n","Epoch 595/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.8422 - mae: 1.8422\n","Epoch 596/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.7687 - mae: 1.7687\n","Epoch 597/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.7898 - mae: 1.7898\n","Epoch 598/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.8279 - mae: 1.8279\n","Epoch 599/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.8083 - mae: 1.8083\n","Epoch 600/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.7437 - mae: 1.7437\n","Epoch 601/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.6937 - mae: 1.6937\n","Epoch 602/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 1.7346 - mae: 1.7346\n","Epoch 603/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.7036 - mae: 1.7036\n","Epoch 604/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.6487 - mae: 1.6487\n","Epoch 605/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.7037 - mae: 1.7037\n","Epoch 606/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.7290 - mae: 1.7290\n","Epoch 607/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.6700 - mae: 1.6700\n","Epoch 608/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.5731 - mae: 1.5731\n","Epoch 609/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.6334 - mae: 1.6334\n","Epoch 610/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.6433 - mae: 1.6433\n","Epoch 611/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.5464 - mae: 1.5464\n","Epoch 612/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.5559 - mae: 1.5559\n","Epoch 613/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.6060 - mae: 1.6060\n","Epoch 614/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.5777 - mae: 1.5777\n","Epoch 615/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.4940 - mae: 1.4940\n","Epoch 616/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.5023 - mae: 1.5023\n","Epoch 617/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.4873 - mae: 1.4873\n","Epoch 618/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.4509 - mae: 1.4509\n","Epoch 619/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 1.4438 - mae: 1.4438\n","Epoch 620/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.4264 - mae: 1.4264\n","Epoch 621/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 1.4045 - mae: 1.4045\n","Epoch 622/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.3844 - mae: 1.3844\n","Epoch 623/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.3700 - mae: 1.3700\n","Epoch 624/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.3720 - mae: 1.3720\n","Epoch 625/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.3421 - mae: 1.3421\n","Epoch 626/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 1.3313 - mae: 1.3313\n","Epoch 627/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.3162 - mae: 1.3162\n","Epoch 628/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.2969 - mae: 1.2969\n","Epoch 629/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.2863 - mae: 1.2863\n","Epoch 630/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.2720 - mae: 1.2720\n","Epoch 631/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.2483 - mae: 1.2483\n","Epoch 632/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.2645 - mae: 1.2645\n","Epoch 633/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.2483 - mae: 1.2483\n","Epoch 634/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.2050 - mae: 1.2050\n","Epoch 635/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 1.2162 - mae: 1.2162\n","Epoch 636/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.2133 - mae: 1.2133\n","Epoch 637/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.1626 - mae: 1.1626\n","Epoch 638/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.1978 - mae: 1.1978\n","Epoch 639/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.1922 - mae: 1.1922\n","Epoch 640/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.1094 - mae: 1.1094\n","Epoch 641/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.1220 - mae: 1.1220\n","Epoch 642/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 1.1336 - mae: 1.1336\n","Epoch 643/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.0939 - mae: 1.0939\n","Epoch 644/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 1.0547 - mae: 1.0547\n","Epoch 645/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 1.0514 - mae: 1.0514\n","Epoch 646/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 1.0345 - mae: 1.0345\n","Epoch 647/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 1.0053 - mae: 1.0053\n","Epoch 648/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.9891 - mae: 0.9891\n","Epoch 649/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.9836 - mae: 0.9836\n","Epoch 650/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.9734 - mae: 0.9734\n","Epoch 651/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.9493 - mae: 0.9493\n","Epoch 652/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.9307 - mae: 0.9307\n","Epoch 653/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.9147 - mae: 0.9147\n","Epoch 654/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.9135 - mae: 0.9135\n","Epoch 655/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.9032 - mae: 0.9032\n","Epoch 656/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.8702 - mae: 0.8702\n","Epoch 657/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.8670 - mae: 0.8670\n","Epoch 658/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.8786 - mae: 0.8786\n","Epoch 659/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.8089 - mae: 0.8089\n","Epoch 660/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.8737 - mae: 0.8737\n","Epoch 661/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.8758 - mae: 0.8758\n","Epoch 662/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.7808 - mae: 0.7808\n","Epoch 663/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.8441 - mae: 0.8441\n","Epoch 664/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.8764 - mae: 0.8764\n","Epoch 665/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.7885 - mae: 0.7885\n","Epoch 666/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.7344 - mae: 0.7344\n","Epoch 667/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.7844 - mae: 0.7844\n","Epoch 668/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.6953 - mae: 0.6953\n","Epoch 669/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.7334 - mae: 0.7334\n","Epoch 670/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.7680 - mae: 0.7680\n","Epoch 671/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.6941 - mae: 0.6941\n","Epoch 672/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.6325 - mae: 0.6325\n","Epoch 673/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.6402 - mae: 0.6402\n","Epoch 674/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.5931 - mae: 0.5931\n","Epoch 675/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.6576 - mae: 0.6576\n","Epoch 676/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.6326 - mae: 0.6326\n","Epoch 677/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.5526 - mae: 0.5526\n","Epoch 678/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.5964 - mae: 0.5964\n","Epoch 679/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.5553 - mae: 0.5553\n","Epoch 680/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.5170 - mae: 0.5170\n","Epoch 681/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5317 - mae: 0.5317\n","Epoch 682/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.4505 - mae: 0.4505\n","Epoch 683/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.4873 - mae: 0.4873\n","Epoch 684/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.4255 - mae: 0.4255\n","Epoch 685/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.4541 - mae: 0.4541\n","Epoch 686/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.4256 - mae: 0.4256\n","Epoch 687/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.4048 - mae: 0.4048\n","Epoch 688/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.3703 - mae: 0.3703\n","Epoch 689/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.3882 - mae: 0.3882\n","Epoch 690/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.3417 - mae: 0.3417\n","Epoch 691/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.3613 - mae: 0.3613\n","Epoch 692/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.3098 - mae: 0.3098\n","Epoch 693/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.2734 - mae: 0.2734\n","Epoch 694/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.2897 - mae: 0.2897\n","Epoch 695/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.2493 - mae: 0.2493\n","Epoch 696/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.2291 - mae: 0.2291\n","Epoch 697/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.2071 - mae: 0.2071\n","Epoch 698/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.2285 - mae: 0.2285\n","Epoch 699/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1874 - mae: 0.1874\n","Epoch 700/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.2109 - mae: 0.2109\n","Epoch 701/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1505 - mae: 0.1505\n","Epoch 702/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.1765 - mae: 0.1765\n","Epoch 703/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 0.1688 - mae: 0.1688\n","Epoch 704/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.1975 - mae: 0.1975\n","Epoch 705/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1144 - mae: 0.1144\n","Epoch 706/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0924 - mae: 0.0924\n","Epoch 707/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0748 - mae: 0.0748\n","Epoch 708/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0437 - mae: 0.0437\n","Epoch 709/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1116 - mae: 0.1116\n","Epoch 710/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0296 - mae: 0.0296\n","Epoch 711/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0426 - mae: 0.0426\n","Epoch 712/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0960 - mae: 0.0960\n","Epoch 713/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0426 - mae: 0.0426\n","Epoch 714/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0389 - mae: 0.0389\n","Epoch 715/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0477 - mae: 0.0477\n","Epoch 716/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0348 - mae: 0.0348\n","Epoch 717/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0281 - mae: 0.0281\n","Epoch 718/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0875 - mae: 0.0875\n","Epoch 719/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0099 - mae: 0.0099\n","Epoch 720/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0347 - mae: 0.0347\n","Epoch 721/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0373 - mae: 0.0373\n","Epoch 722/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0337 - mae: 0.0337\n","Epoch 723/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0222 - mae: 0.0222\n","Epoch 724/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0427 - mae: 0.0427\n","Epoch 725/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.1077 - mae: 0.1077\n","Epoch 726/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1388 - mae: 0.1388\n","Epoch 727/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1147 - mae: 0.1147\n","Epoch 728/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.2426 - mae: 0.2426\n","Epoch 729/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.2916 - mae: 0.2916\n","Epoch 730/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0250 - mae: 0.0250\n","Epoch 731/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.1014 - mae: 0.1014\n","Epoch 732/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.1718 - mae: 0.1718\n","Epoch 733/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.1748 - mae: 0.1748\n","Epoch 734/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.1435 - mae: 0.1435\n","Epoch 735/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.1800 - mae: 0.1800\n","Epoch 736/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1168 - mae: 0.1168\n","Epoch 737/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1754 - mae: 0.1754\n","Epoch 738/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1001 - mae: 0.1001\n","Epoch 739/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.1165 - mae: 0.1165\n","Epoch 740/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1806 - mae: 0.1806\n","Epoch 741/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1794 - mae: 0.1794\n","Epoch 742/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1390 - mae: 0.1390\n","Epoch 743/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.1815 - mae: 0.1815\n","Epoch 744/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0844 - mae: 0.0844\n","Epoch 745/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.1034 - mae: 0.1034\n","Epoch 746/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.1715 - mae: 0.1715\n","Epoch 747/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1788 - mae: 0.1788\n","Epoch 748/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.1129 - mae: 0.1129\n","Epoch 749/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1421 - mae: 0.1421\n","Epoch 750/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1392 - mae: 0.1392\n","Epoch 751/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.1931 - mae: 0.1931\n","Epoch 752/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0592 - mae: 0.0592\n","Epoch 753/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0597 - mae: 0.0597\n","Epoch 754/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1463 - mae: 0.1463\n","Epoch 755/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0143 - mae: 0.0143\n","Epoch 756/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0356 - mae: 0.0356\n","Epoch 757/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0920 - mae: 0.0920\n","Epoch 758/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1467 - mae: 0.1467\n","Epoch 759/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1244 - mae: 0.1244\n","Epoch 760/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.1886 - mae: 0.1886\n","Epoch 761/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.2272 - mae: 0.2272\n","Epoch 762/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0373 - mae: 0.0373\n","Epoch 763/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1095 - mae: 0.1095\n","Epoch 764/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1025 - mae: 0.1025\n","Epoch 765/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0741 - mae: 0.0741\n","Epoch 766/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0770 - mae: 0.0770\n","Epoch 767/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1028 - mae: 0.1028\n","Epoch 768/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0823 - mae: 0.0823\n","Epoch 769/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0608 - mae: 0.0608\n","Epoch 770/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1043 - mae: 0.1043\n","Epoch 771/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0666 - mae: 0.0666\n","Epoch 772/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1144 - mae: 0.1144\n","Epoch 773/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0385 - mae: 0.0385\n","Epoch 774/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0073 - mae: 0.0073\n","Epoch 775/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0576 - mae: 0.0576\n","Epoch 776/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0549 - mae: 0.0549\n","Epoch 777/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0037 - mae: 0.0037\n","Epoch 778/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0698 - mae: 0.0698\n","Epoch 779/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0386 - mae: 0.0386\n","Epoch 780/1000\n","2/2 [==============================] - 0s 17ms/step - loss: 0.0136 - mae: 0.0136\n","Epoch 781/1000\n","2/2 [==============================] - 0s 17ms/step - loss: 0.0652 - mae: 0.0652\n","Epoch 782/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0174 - mae: 0.0174\n","Epoch 783/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0442 - mae: 0.0442\n","Epoch 784/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0902 - mae: 0.0902\n","Epoch 785/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0544 - mae: 0.0544\n","Epoch 786/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1237 - mae: 0.1237\n","Epoch 787/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0311 - mae: 0.0311\n","Epoch 788/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0068 - mae: 0.0068\n","Epoch 789/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0538 - mae: 0.0538\n","Epoch 790/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0548 - mae: 0.0548\n","Epoch 791/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0085 - mae: 0.0085\n","Epoch 792/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0296 - mae: 0.0296\n","Epoch 793/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0286 - mae: 0.0286\n","Epoch 794/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0322 - mae: 0.0322\n","Epoch 795/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0238 - mae: 0.0238\n","Epoch 796/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0169 - mae: 0.0169\n","Epoch 797/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0298 - mae: 0.0298\n","Epoch 798/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0509 - mae: 0.0509\n","Epoch 799/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0337 - mae: 0.0337\n","Epoch 800/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0415 - mae: 0.0415\n","Epoch 801/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0259 - mae: 0.0259\n","Epoch 802/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0695 - mae: 0.0695\n","Epoch 803/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1315 - mae: 0.1315\n","Epoch 804/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1204 - mae: 0.1204\n","Epoch 805/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1413 - mae: 0.1413\n","Epoch 806/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1769 - mae: 0.1769\n","Epoch 807/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0481 - mae: 0.0481\n","Epoch 808/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0461 - mae: 0.0461\n","Epoch 809/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1267 - mae: 0.1267\n","Epoch 810/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0105 - mae: 0.0105\n","Epoch 811/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0323 - mae: 0.0323\n","Epoch 812/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0820 - mae: 0.0820\n","Epoch 813/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0928 - mae: 0.0928\n","Epoch 814/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0745 - mae: 0.0745\n","Epoch 815/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 0.0462 - mae: 0.0462\n","Epoch 816/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.1060 - mae: 0.1060\n","Epoch 817/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0779 - mae: 0.0779\n","Epoch 818/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0392 - mae: 0.0392\n","Epoch 819/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0796 - mae: 0.0796\n","Epoch 820/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0311 - mae: 0.0311\n","Epoch 821/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1879 - mae: 0.1879\n","Epoch 822/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0761 - mae: 0.0761\n","Epoch 823/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.1425 - mae: 0.1425\n","Epoch 824/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0495 - mae: 0.0495\n","Epoch 825/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.2220 - mae: 0.2220\n","Epoch 826/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1250 - mae: 0.1250\n","Epoch 827/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.2093 - mae: 0.2093\n","Epoch 828/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.3195 - mae: 0.3195\n","Epoch 829/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.1507 - mae: 0.1507\n","Epoch 830/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.2110 - mae: 0.2110\n","Epoch 831/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.3118 - mae: 0.3118\n","Epoch 832/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1305 - mae: 0.1305\n","Epoch 833/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1221 - mae: 0.1221\n","Epoch 834/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0663 - mae: 0.0663\n","Epoch 835/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1321 - mae: 0.1321\n","Epoch 836/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0482 - mae: 0.0482\n","Epoch 837/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.2009 - mae: 0.2009\n","Epoch 838/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1013 - mae: 0.1013\n","Epoch 839/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0779 - mae: 0.0779\n","Epoch 840/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0266 - mae: 0.0266\n","Epoch 841/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0333 - mae: 0.0333\n","Epoch 842/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0526 - mae: 0.0526\n","Epoch 843/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0260 - mae: 0.0260\n","Epoch 844/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1437 - mae: 0.1437\n","Epoch 845/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.0460 - mae: 0.0460\n","Epoch 846/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.2124 - mae: 0.2124\n","Epoch 847/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.1649 - mae: 0.1649\n","Epoch 848/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0919 - mae: 0.0919\n","Epoch 849/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.1272 - mae: 0.1272\n","Epoch 850/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0704 - mae: 0.0704\n","Epoch 851/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0907 - mae: 0.0907\n","Epoch 852/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.1033 - mae: 0.1033\n","Epoch 853/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0720 - mae: 0.0720\n","Epoch 854/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0349 - mae: 0.0349\n","Epoch 855/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0255 - mae: 0.0255\n","Epoch 856/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0203 - mae: 0.0203\n","Epoch 857/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.0583 - mae: 0.0583\n","Epoch 858/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0530 - mae: 0.0530\n","Epoch 859/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.0250 - mae: 0.0250\n","Epoch 860/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0433 - mae: 0.0433\n","Epoch 861/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0200 - mae: 0.0200\n","Epoch 862/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0599 - mae: 0.0599\n","Epoch 863/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0126 - mae: 0.0126\n","Epoch 864/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0582 - mae: 0.0582\n","Epoch 865/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1207 - mae: 0.1207\n","Epoch 866/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1361 - mae: 0.1361\n","Epoch 867/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0602 - mae: 0.0602\n","Epoch 868/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0500 - mae: 0.0500\n","Epoch 869/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0620 - mae: 0.0620\n","Epoch 870/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0928 - mae: 0.0928\n","Epoch 871/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0607 - mae: 0.0607\n","Epoch 872/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0276 - mae: 0.0276\n","Epoch 873/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.0249 - mae: 0.0249\n","Epoch 874/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0789 - mae: 0.0789\n","Epoch 875/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0713 - mae: 0.0713\n","Epoch 876/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0411 - mae: 0.0411\n","Epoch 877/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1522 - mae: 0.1522\n","Epoch 878/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0751 - mae: 0.0751\n","Epoch 879/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0579 - mae: 0.0579\n","Epoch 880/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0760 - mae: 0.0760\n","Epoch 881/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0571 - mae: 0.0571\n","Epoch 882/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0739 - mae: 0.0739\n","Epoch 883/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0337 - mae: 0.0337\n","Epoch 884/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0152 - mae: 0.0152\n","Epoch 885/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0659 - mae: 0.0659\n","Epoch 886/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0344 - mae: 0.0344\n","Epoch 887/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0968 - mae: 0.0968\n","Epoch 888/1000\n","2/2 [==============================] - 0s 27ms/step - loss: 0.0364 - mae: 0.0364\n","Epoch 889/1000\n","2/2 [==============================] - 0s 31ms/step - loss: 0.0184 - mae: 0.0184\n","Epoch 890/1000\n","2/2 [==============================] - 0s 40ms/step - loss: 0.1331 - mae: 0.1331\n","Epoch 891/1000\n","2/2 [==============================] - 0s 26ms/step - loss: 0.0357 - mae: 0.0357\n","Epoch 892/1000\n","2/2 [==============================] - 0s 30ms/step - loss: 0.2358 - mae: 0.2358\n","Epoch 893/1000\n","2/2 [==============================] - 0s 33ms/step - loss: 0.1621 - mae: 0.1621\n","Epoch 894/1000\n","2/2 [==============================] - 0s 28ms/step - loss: 0.1271 - mae: 0.1271\n","Epoch 895/1000\n","2/2 [==============================] - 0s 36ms/step - loss: 0.2184 - mae: 0.2184\n","Epoch 896/1000\n","2/2 [==============================] - 0s 35ms/step - loss: 0.0812 - mae: 0.0812\n","Epoch 897/1000\n","2/2 [==============================] - 0s 45ms/step - loss: 0.1649 - mae: 0.1649\n","Epoch 898/1000\n","2/2 [==============================] - 0s 51ms/step - loss: 0.0977 - mae: 0.0977\n","Epoch 899/1000\n","2/2 [==============================] - 0s 30ms/step - loss: 0.1705 - mae: 0.1705\n","Epoch 900/1000\n","2/2 [==============================] - 0s 42ms/step - loss: 0.2525 - mae: 0.2525\n","Epoch 901/1000\n","2/2 [==============================] - 0s 28ms/step - loss: 0.0977 - mae: 0.0977\n","Epoch 902/1000\n","2/2 [==============================] - 0s 31ms/step - loss: 0.0968 - mae: 0.0968\n","Epoch 903/1000\n","2/2 [==============================] - 0s 25ms/step - loss: 0.0288 - mae: 0.0288\n","Epoch 904/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.2353 - mae: 0.2353\n","Epoch 905/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.1742 - mae: 0.1742\n","Epoch 906/1000\n","2/2 [==============================] - 0s 21ms/step - loss: 0.1027 - mae: 0.1027\n","Epoch 907/1000\n","2/2 [==============================] - 0s 18ms/step - loss: 0.2017 - mae: 0.2017\n","Epoch 908/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.0807 - mae: 0.0807\n","Epoch 909/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1488 - mae: 0.1488\n","Epoch 910/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0768 - mae: 0.0768\n","Epoch 911/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0310 - mae: 0.0310\n","Epoch 912/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.0121 - mae: 0.0121\n","Epoch 913/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0390 - mae: 0.0390\n","Epoch 914/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0191 - mae: 0.0191\n","Epoch 915/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0400 - mae: 0.0400\n","Epoch 916/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0208 - mae: 0.0208\n","Epoch 917/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0874 - mae: 0.0874\n","Epoch 918/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0343 - mae: 0.0343\n","Epoch 919/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0034 - mae: 0.0034\n","Epoch 920/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0429 - mae: 0.0429\n","Epoch 921/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0414 - mae: 0.0414\n","Epoch 922/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0091 - mae: 0.0091\n","Epoch 923/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0712 - mae: 0.0712\n","Epoch 924/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0352 - mae: 0.0352\n","Epoch 925/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1214 - mae: 0.1214\n","Epoch 926/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0369 - mae: 0.0369\n","Epoch 927/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1771 - mae: 0.1771\n","Epoch 928/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1053 - mae: 0.1053\n","Epoch 929/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.1581 - mae: 0.1581\n","Epoch 930/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.2133 - mae: 0.2133\n","Epoch 931/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0691 - mae: 0.0691\n","Epoch 932/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1879 - mae: 0.1879\n","Epoch 933/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1416 - mae: 0.1416\n","Epoch 934/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1109 - mae: 0.1109\n","Epoch 935/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.1658 - mae: 0.1658\n","Epoch 936/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0344 - mae: 0.0344\n","Epoch 937/1000\n","2/2 [==============================] - 0s 14ms/step - loss: 0.2415 - mae: 0.2415\n","Epoch 938/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.2008 - mae: 0.2008\n","Epoch 939/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0329 - mae: 0.0329\n","Epoch 940/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1141 - mae: 0.1141\n","Epoch 941/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0145 - mae: 0.0145\n","Epoch 942/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0190 - mae: 0.0190\n","Epoch 943/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1033 - mae: 0.1033\n","Epoch 944/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.0072 - mae: 0.0072\n","Epoch 945/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0383 - mae: 0.0383\n","Epoch 946/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0253 - mae: 0.0253\n","Epoch 947/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0354 - mae: 0.0354\n","Epoch 948/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0174 - mae: 0.0174\n","Epoch 949/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0831 - mae: 0.0831\n","Epoch 950/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0624 - mae: 0.0624\n","Epoch 951/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0662 - mae: 0.0662\n","Epoch 952/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0361 - mae: 0.0361\n","Epoch 953/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0027 - mae: 0.0027\n","Epoch 954/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0506 - mae: 0.0506\n","Epoch 955/1000\n","2/2 [==============================] - 0s 21ms/step - loss: 0.0216 - mae: 0.0216\n","Epoch 956/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0269 - mae: 0.0269\n","Epoch 957/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0589 - mae: 0.0589\n","Epoch 958/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0342 - mae: 0.0342\n","Epoch 959/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 0.0880 - mae: 0.0880\n","Epoch 960/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0419 - mae: 0.0419\n","Epoch 961/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0301 - mae: 0.0301\n","Epoch 962/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0889 - mae: 0.0889\n","Epoch 963/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0295 - mae: 0.0295\n","Epoch 964/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0076 - mae: 0.0076\n","Epoch 965/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0137 - mae: 0.0137\n","Epoch 966/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0380 - mae: 0.0380\n","Epoch 967/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0156 - mae: 0.0156\n","Epoch 968/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0361 - mae: 0.0361\n","Epoch 969/1000\n","2/2 [==============================] - 0s 35ms/step - loss: 0.0378 - mae: 0.0378\n","Epoch 970/1000\n","2/2 [==============================] - 0s 18ms/step - loss: 0.0790 - mae: 0.0790\n","Epoch 971/1000\n","2/2 [==============================] - 0s 16ms/step - loss: 0.0466 - mae: 0.0466\n","Epoch 972/1000\n","2/2 [==============================] - 0s 21ms/step - loss: 0.0327 - mae: 0.0327\n","Epoch 973/1000\n","2/2 [==============================] - 0s 24ms/step - loss: 0.0114 - mae: 0.0114\n","Epoch 974/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.0241 - mae: 0.0241\n","Epoch 975/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0637 - mae: 0.0637\n","Epoch 976/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0582 - mae: 0.0582\n","Epoch 977/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0348 - mae: 0.0348\n","Epoch 978/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0873 - mae: 0.0873\n","Epoch 979/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.0264 - mae: 0.0264\n","Epoch 980/1000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.0048 - mae: 0.0048\n","Epoch 981/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0236 - mae: 0.0236\n","Epoch 982/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0150 - mae: 0.0150\n","Epoch 983/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0231 - mae: 0.0231\n","Epoch 984/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0603 - mae: 0.0603\n","Epoch 985/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0726 - mae: 0.0726\n","Epoch 986/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0671 - mae: 0.0671\n","Epoch 987/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1128 - mae: 0.1128\n","Epoch 988/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.1425 - mae: 0.1425\n","Epoch 989/1000\n","2/2 [==============================] - 0s 8ms/step - loss: 0.0163 - mae: 0.0163\n","Epoch 990/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0401 - mae: 0.0401\n","Epoch 991/1000\n","2/2 [==============================] - 0s 12ms/step - loss: 0.0236 - mae: 0.0236\n","Epoch 992/1000\n","2/2 [==============================] - 0s 15ms/step - loss: 0.0015 - mae: 0.0015   \n","Epoch 993/1000\n","2/2 [==============================] - 0s 13ms/step - loss: 0.0453 - mae: 0.0453\n","Epoch 994/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0281 - mae: 0.0281\n","Epoch 995/1000\n","2/2 [==============================] - 0s 10ms/step - loss: 0.0168 - mae: 0.0168\n","Epoch 996/1000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.0355 - mae: 0.0355\n","Epoch 997/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0345 - mae: 0.0345\n","Epoch 998/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0230 - mae: 0.0230\n","Epoch 999/1000\n","2/2 [==============================] - 0s 11ms/step - loss: 0.0350 - mae: 0.0350\n","Epoch 1000/1000\n","2/2 [==============================] - 0s 9ms/step - loss: 0.0306 - mae: 0.0306\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7ba75be41060>"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["y_pred3 = model_3.predict(X_test)\n","plot_pred(predictions = y_pred3)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":656},"id":"8_yjASr4eG69","executionInfo":{"status":"ok","timestamp":1707069826217,"user_tz":180,"elapsed":62,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"623b0721-5e6f-4b42-e6b5-b753b06070d8"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7ba75be69d80> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 107ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mae_3 = mae(y_test, tf.squeeze(tf.constant(y_pred3)))\n","mse_3 = mse(y_test, tf.squeeze(tf.constant(y_pred3)))\n","\n","mae_3, mse_3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SkVxwfmyfWj_","executionInfo":{"status":"ok","timestamp":1707069826217,"user_tz":180,"elapsed":28,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"20886a94-68be-44aa-b8c3-a322d3c64c3e"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=0.05365448>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=0.0029449626>)"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["## Compare our 3 models"],"metadata":{"id":"6fU96cEbf5Dm"}},{"cell_type":"code","source":["import pandas as pd\n","\n","model_results = [['model_1',mae_1.numpy(), mse_1.numpy()],\n","                 ['model_2', mae_2.numpy(), mse_2.numpy()],\n","                 ['model_3', mae_3.numpy(), mse_3.numpy()]]\n","\n","all_results = pd.DataFrame(model_results, columns=['model', 'mae', 'mse'])\n","\n","all_results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"Vlt2nMmHflpi","executionInfo":{"status":"ok","timestamp":1707069826217,"user_tz":180,"elapsed":27,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"a015247e-e62f-4966-ec36-fb87f27a079c"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     model        mae         mse\n","0  model_1  14.908559  223.098236\n","1  model_2  10.139954  110.160324\n","2  model_3   0.053654    0.002945"],"text/html":["\n","  <div id=\"df-cd3cc559-43a3-49ec-b842-c7a356185b30\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>mae</th>\n","      <th>mse</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>model_1</td>\n","      <td>14.908559</td>\n","      <td>223.098236</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>model_2</td>\n","      <td>10.139954</td>\n","      <td>110.160324</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>model_3</td>\n","      <td>0.053654</td>\n","      <td>0.002945</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd3cc559-43a3-49ec-b842-c7a356185b30')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd3cc559-43a3-49ec-b842-c7a356185b30 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd3cc559-43a3-49ec-b842-c7a356185b30');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e4ce6d6b-e9ba-4e37-b95a-493d979b980c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4ce6d6b-e9ba-4e37-b95a-493d979b980c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e4ce6d6b-e9ba-4e37-b95a-493d979b980c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8d359b8d-9f29-41e3-bbaa-58f5057eb13a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('all_results')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8d359b8d-9f29-41e3-bbaa-58f5057eb13a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('all_results');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["## Saving our Models\n","* SaveModel Format\n","* The HDF5 Format"],"metadata":{"id":"7XM7T60ijp-y"}},{"cell_type":"code","source":["# Save a model with default mode\n","model_3.save('best_model_first')"],"metadata":{"id":"UQzzY3szjr-1","executionInfo":{"status":"ok","timestamp":1707069826217,"user_tz":180,"elapsed":26,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":40,"outputs":[]},{"cell_type":"markdown","source":["## Loading in a Saved Model"],"metadata":{"id":"RYsSfXGDlpt8"}},{"cell_type":"code","source":["# Loas in the savedmodel\n","loaded_model = tf.keras.models.load_model('/content/best_model_first')\n","loaded_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SIKJCxHUlr8U","executionInfo":{"status":"ok","timestamp":1707069826217,"user_tz":180,"elapsed":26,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"cb718d28-0f87-4caf-f4d2-5bcdb306442a"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_6 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_7 (Dense)             (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31 (124.00 Byte)\n","Trainable params: 31 (124.00 Byte)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# Compare predictions from before and now\n","loaded_model_pred = loaded_model.predict(X_test)\n","loaded_model_pred == y_pred3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"anNOBGX6mSu4","executionInfo":{"status":"ok","timestamp":1707069826218,"user_tz":180,"elapsed":24,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"157aa5b9-6f75-4c67-fcf4-7bfb290c46e7"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 75ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True]])"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":[],"metadata":{"id":"btCgMV0gm7ua","executionInfo":{"status":"ok","timestamp":1707069826218,"user_tz":180,"elapsed":22,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":42,"outputs":[]},{"cell_type":"markdown","source":["# Large Example"],"metadata":{"id":"_ppAgoiwDXBC"}},{"cell_type":"code","source":["import tensorflow as tf\n","import pandas as pd\n","import matplotlib.pyplot as plt\n"],"metadata":{"id":"4_fkamm3DrkL","executionInfo":{"status":"ok","timestamp":1707071434068,"user_tz":180,"elapsed":3862,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["## **Dataset**"],"metadata":{"id":"E_DTqvEtDZZL"}},{"cell_type":"code","source":["#Read in the insurance dataset\n","\n","insurance = pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")\n","insurance.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"az8YX-yPEZZp","executionInfo":{"status":"ok","timestamp":1707069826218,"user_tz":180,"elapsed":21,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"805f0237-3fda-42f6-9668-b08b848400c5"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     sex     bmi  children smoker     region      charges\n","0   19  female  27.900         0    yes  southwest  16884.92400\n","1   18    male  33.770         1     no  southeast   1725.55230\n","2   28    male  33.000         3     no  southeast   4449.46200\n","3   33    male  22.705         0     no  northwest  21984.47061\n","4   32    male  28.880         0     no  northwest   3866.85520"],"text/html":["\n","  <div id=\"df-802bb6fa-a2fe-46eb-8a88-a1d11b5ae9d7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-802bb6fa-a2fe-46eb-8a88-a1d11b5ae9d7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-802bb6fa-a2fe-46eb-8a88-a1d11b5ae9d7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-802bb6fa-a2fe-46eb-8a88-a1d11b5ae9d7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-929a1021-0659-4f0e-948b-383606fdb79c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-929a1021-0659-4f0e-948b-383606fdb79c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-929a1021-0659-4f0e-948b-383606fdb79c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["### **1. We need to turn the categorical features into numbers (sex, smoker, region)**"],"metadata":{"id":"8LRmXwF4FZOK"}},{"cell_type":"code","source":["insurance_onehot = pd.get_dummies(insurance)\n","insurance_onehot.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"GGtSjXVrEncZ","executionInfo":{"status":"ok","timestamp":1707069916930,"user_tz":180,"elapsed":244,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"96977470-ca48-4f6e-f144-eaf8a5bf82ee"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children      charges  sex_female  sex_male  smoker_no  \\\n","0   19  27.900         0  16884.92400           1         0          0   \n","1   18  33.770         1   1725.55230           0         1          1   \n","2   28  33.000         3   4449.46200           0         1          1   \n","3   33  22.705         0  21984.47061           0         1          1   \n","4   32  28.880         0   3866.85520           0         1          1   \n","\n","   smoker_yes  region_northeast  region_northwest  region_southeast  \\\n","0           1                 0                 0                 0   \n","1           0                 0                 0                 1   \n","2           0                 0                 0                 1   \n","3           0                 0                 1                 0   \n","4           0                 0                 1                 0   \n","\n","   region_southwest  \n","0                 1  \n","1                 0  \n","2                 0  \n","3                 0  \n","4                 0  "],"text/html":["\n","  <div id=\"df-f56e9714-0ded-430a-8522-7e6aa80f8251\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>charges</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>16884.92400</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>1725.55230</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>4449.46200</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>21984.47061</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>3866.85520</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f56e9714-0ded-430a-8522-7e6aa80f8251')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f56e9714-0ded-430a-8522-7e6aa80f8251 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f56e9714-0ded-430a-8522-7e6aa80f8251');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-caf25964-ee72-4ea4-9532-aa37be3b8320\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-caf25964-ee72-4ea4-9532-aa37be3b8320')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-caf25964-ee72-4ea4-9532-aa37be3b8320 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["### **2. Create our data sets (Train, Test)**"],"metadata":{"id":"rkEsDnd-HD5m"}},{"cell_type":"code","source":["# Create X & y values (features and labels)\n","X = insurance_onehot.drop(\"charges\", axis=1)\n","y = insurance_onehot[\"charges\"]\n","\n","# View X\n","X, y"],"metadata":{"id":"8X1sJcbqGXjC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707069920071,"user_tz":180,"elapsed":385,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"28c052e5-a25d-4edc-f59c-ba3775804619"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(      age     bmi  children  sex_female  sex_male  smoker_no  smoker_yes  \\\n"," 0      19  27.900         0           1         0          0           1   \n"," 1      18  33.770         1           0         1          1           0   \n"," 2      28  33.000         3           0         1          1           0   \n"," 3      33  22.705         0           0         1          1           0   \n"," 4      32  28.880         0           0         1          1           0   \n"," ...   ...     ...       ...         ...       ...        ...         ...   \n"," 1333   50  30.970         3           0         1          1           0   \n"," 1334   18  31.920         0           1         0          1           0   \n"," 1335   18  36.850         0           1         0          1           0   \n"," 1336   21  25.800         0           1         0          1           0   \n"," 1337   61  29.070         0           1         0          0           1   \n"," \n","       region_northeast  region_northwest  region_southeast  region_southwest  \n"," 0                    0                 0                 0                 1  \n"," 1                    0                 0                 1                 0  \n"," 2                    0                 0                 1                 0  \n"," 3                    0                 1                 0                 0  \n"," 4                    0                 1                 0                 0  \n"," ...                ...               ...               ...               ...  \n"," 1333                 0                 1                 0                 0  \n"," 1334                 1                 0                 0                 0  \n"," 1335                 0                 0                 1                 0  \n"," 1336                 0                 0                 0                 1  \n"," 1337                 0                 1                 0                 0  \n"," \n"," [1338 rows x 11 columns],\n"," 0       16884.92400\n"," 1        1725.55230\n"," 2        4449.46200\n"," 3       21984.47061\n"," 4        3866.85520\n","            ...     \n"," 1333    10600.54830\n"," 1334     2205.98080\n"," 1335     1629.83350\n"," 1336     2007.94500\n"," 1337    29141.36030\n"," Name: charges, Length: 1338, dtype: float64)"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# Creating a Training data set\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42) # With this we can separete our data in order to create 2 datasets 80% and 20%\n","\n"],"metadata":{"id":"s98Bd76nH6S5","executionInfo":{"status":"ok","timestamp":1707069924171,"user_tz":180,"elapsed":256,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":52,"outputs":[]},{"cell_type":"markdown","source":["## **Build a Neural Network**"],"metadata":{"id":"439KkPdEL3I4"}},{"cell_type":"code","source":["# Build our model\n","tf.random.set_seed(42)\n","\n","# 1. Create a model using the Sequential API\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100), # We add an extra layer in this larger datasets\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile the model\n","\n","model.compile(loss = 'mae', #mae is Mean Absolute Error\n","              optimizer = tf.keras.optimizers.Adam(lr = 0.01),\n","              metrics = ['mae'])\n","\n","# 3. Fit the model\n","history = model.fit(tf.expand_dims(X_train, axis=-1),y_train, epochs = 100) # We add more epochs and a history to see the loss curve"],"metadata":{"id":"SdAokYYwHYAf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707069973582,"user_tz":180,"elapsed":21424,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"171cd7db-4b04-41e8-ac56-2aae78b7c680"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","34/34 [==============================] - 1s 6ms/step - loss: 13333.8760 - mae: 13333.8760\n","Epoch 2/100\n","34/34 [==============================] - 0s 7ms/step - loss: 13306.1699 - mae: 13306.1699\n","Epoch 3/100\n","34/34 [==============================] - 0s 6ms/step - loss: 13255.7979 - mae: 13255.7979\n","Epoch 4/100\n","34/34 [==============================] - 0s 5ms/step - loss: 13165.5654 - mae: 13165.5654\n","Epoch 5/100\n","34/34 [==============================] - 0s 6ms/step - loss: 13019.6631 - mae: 13019.6631\n","Epoch 6/100\n","34/34 [==============================] - 0s 7ms/step - loss: 12812.1582 - mae: 12812.1582\n","Epoch 7/100\n","34/34 [==============================] - 0s 6ms/step - loss: 12562.1914 - mae: 12562.1914\n","Epoch 8/100\n","34/34 [==============================] - 0s 6ms/step - loss: 12313.3262 - mae: 12313.3262\n","Epoch 9/100\n","34/34 [==============================] - 0s 7ms/step - loss: 12154.1670 - mae: 12154.1670\n","Epoch 10/100\n","34/34 [==============================] - 0s 5ms/step - loss: 12103.3037 - mae: 12103.3037\n","Epoch 11/100\n","34/34 [==============================] - 0s 4ms/step - loss: 12079.6895 - mae: 12079.6895\n","Epoch 12/100\n","34/34 [==============================] - 0s 4ms/step - loss: 12057.8008 - mae: 12057.8008\n","Epoch 13/100\n","34/34 [==============================] - 0s 4ms/step - loss: 12035.8486 - mae: 12035.8486\n","Epoch 14/100\n","34/34 [==============================] - 0s 4ms/step - loss: 12012.6230 - mae: 12012.6230\n","Epoch 15/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11987.9766 - mae: 11987.9766\n","Epoch 16/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11960.9453 - mae: 11960.9453\n","Epoch 17/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11931.3877 - mae: 11931.3877\n","Epoch 18/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11898.5342 - mae: 11898.5342\n","Epoch 19/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11861.7402 - mae: 11861.7402\n","Epoch 20/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11819.4404 - mae: 11819.4404\n","Epoch 21/100\n","34/34 [==============================] - 0s 5ms/step - loss: 11771.1182 - mae: 11771.1182\n","Epoch 22/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11714.7695 - mae: 11714.7695\n","Epoch 23/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11648.6807 - mae: 11648.6807\n","Epoch 24/100\n","34/34 [==============================] - 0s 3ms/step - loss: 11570.7285 - mae: 11570.7285\n","Epoch 25/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11479.4922 - mae: 11479.4922\n","Epoch 26/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11369.5801 - mae: 11369.5801\n","Epoch 27/100\n","34/34 [==============================] - 0s 4ms/step - loss: 11242.5273 - mae: 11242.5273\n","Epoch 28/100\n","34/34 [==============================] - 0s 5ms/step - loss: 11096.3242 - mae: 11096.3242\n","Epoch 29/100\n","34/34 [==============================] - 0s 4ms/step - loss: 10933.6826 - mae: 10933.6826\n","Epoch 30/100\n","34/34 [==============================] - 0s 4ms/step - loss: 10763.0186 - mae: 10763.0186\n","Epoch 31/100\n","34/34 [==============================] - 0s 4ms/step - loss: 10583.3994 - mae: 10583.3994\n","Epoch 32/100\n","34/34 [==============================] - 0s 5ms/step - loss: 10402.2598 - mae: 10402.2598\n","Epoch 33/100\n","34/34 [==============================] - 0s 4ms/step - loss: 10216.7148 - mae: 10216.7148\n","Epoch 34/100\n","34/34 [==============================] - 0s 4ms/step - loss: 10031.7285 - mae: 10031.7285\n","Epoch 35/100\n","34/34 [==============================] - 0s 4ms/step - loss: 9839.3877 - mae: 9839.3877\n","Epoch 36/100\n","34/34 [==============================] - 0s 4ms/step - loss: 9652.4307 - mae: 9652.4307\n","Epoch 37/100\n","34/34 [==============================] - 0s 4ms/step - loss: 9471.6465 - mae: 9471.6465\n","Epoch 38/100\n","34/34 [==============================] - 0s 4ms/step - loss: 9302.0742 - mae: 9302.0742\n","Epoch 39/100\n","34/34 [==============================] - 0s 4ms/step - loss: 9147.2871 - mae: 9147.2871\n","Epoch 40/100\n","34/34 [==============================] - 0s 4ms/step - loss: 9008.3447 - mae: 9008.3447\n","Epoch 41/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8885.8994 - mae: 8885.8994\n","Epoch 42/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8771.2871 - mae: 8771.2871\n","Epoch 43/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8670.6455 - mae: 8670.6455\n","Epoch 44/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8578.0156 - mae: 8578.0156\n","Epoch 45/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8513.3145 - mae: 8513.3145\n","Epoch 46/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8455.2148 - mae: 8455.2148\n","Epoch 47/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8419.1416 - mae: 8419.1416\n","Epoch 48/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8379.5283 - mae: 8379.5283\n","Epoch 49/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8353.0752 - mae: 8353.0752\n","Epoch 50/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8330.6445 - mae: 8330.6445\n","Epoch 51/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8316.6025 - mae: 8316.6025\n","Epoch 52/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8310.1553 - mae: 8310.1553\n","Epoch 53/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8294.4551 - mae: 8294.4551\n","Epoch 54/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8288.1914 - mae: 8288.1914\n","Epoch 55/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8286.4150 - mae: 8286.4150\n","Epoch 56/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8282.2676 - mae: 8282.2676\n","Epoch 57/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8279.7949 - mae: 8279.7949\n","Epoch 58/100\n","34/34 [==============================] - 0s 3ms/step - loss: 8278.0889 - mae: 8278.0889\n","Epoch 59/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8278.2949 - mae: 8278.2949\n","Epoch 60/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8280.2070 - mae: 8280.2070\n","Epoch 61/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8278.1914 - mae: 8278.1914\n","Epoch 62/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8275.1787 - mae: 8275.1787\n","Epoch 63/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8275.9395 - mae: 8275.9395\n","Epoch 64/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.5723 - mae: 8274.5723\n","Epoch 65/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.2305 - mae: 8274.2305\n","Epoch 66/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8273.5801 - mae: 8273.5801\n","Epoch 67/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8276.9307 - mae: 8276.9307\n","Epoch 68/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.4932 - mae: 8274.4932\n","Epoch 69/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.3477 - mae: 8274.3477\n","Epoch 70/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8277.0508 - mae: 8277.0508\n","Epoch 71/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8275.5684 - mae: 8275.5684\n","Epoch 72/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8276.0488 - mae: 8276.0488\n","Epoch 73/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.3203 - mae: 8274.3203\n","Epoch 74/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8273.6748 - mae: 8273.6748\n","Epoch 75/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8273.7490 - mae: 8273.7490\n","Epoch 76/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8276.5293 - mae: 8276.5293\n","Epoch 77/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8273.1914 - mae: 8273.1914\n","Epoch 78/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.1631 - mae: 8274.1631\n","Epoch 79/100\n","34/34 [==============================] - 0s 7ms/step - loss: 8275.3535 - mae: 8275.3535\n","Epoch 80/100\n","34/34 [==============================] - 0s 6ms/step - loss: 8273.0801 - mae: 8273.0801\n","Epoch 81/100\n","34/34 [==============================] - 0s 7ms/step - loss: 8274.0723 - mae: 8274.0723\n","Epoch 82/100\n","34/34 [==============================] - 0s 7ms/step - loss: 8274.7695 - mae: 8274.7695\n","Epoch 83/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8279.2227 - mae: 8279.2227\n","Epoch 84/100\n","34/34 [==============================] - 0s 7ms/step - loss: 8273.3857 - mae: 8273.3857\n","Epoch 85/100\n","34/34 [==============================] - 0s 6ms/step - loss: 8277.4980 - mae: 8277.4980\n","Epoch 86/100\n","34/34 [==============================] - 0s 7ms/step - loss: 8275.1904 - mae: 8275.1904\n","Epoch 87/100\n","34/34 [==============================] - 0s 7ms/step - loss: 8275.9512 - mae: 8275.9512\n","Epoch 88/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8273.7031 - mae: 8273.7031\n","Epoch 89/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8273.5820 - mae: 8273.5820\n","Epoch 90/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8275.5508 - mae: 8275.5508\n","Epoch 91/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8273.6953 - mae: 8273.6953\n","Epoch 92/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.5908 - mae: 8274.5908\n","Epoch 93/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8274.7461 - mae: 8274.7461\n","Epoch 94/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8275.3984 - mae: 8275.3984\n","Epoch 95/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.7139 - mae: 8274.7139\n","Epoch 96/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.4238 - mae: 8274.4238\n","Epoch 97/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8276.8232 - mae: 8276.8232\n","Epoch 98/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8273.8672 - mae: 8273.8672\n","Epoch 99/100\n","34/34 [==============================] - 0s 4ms/step - loss: 8274.1895 - mae: 8274.1895\n","Epoch 100/100\n","34/34 [==============================] - 0s 5ms/step - loss: 8273.8838 - mae: 8273.8838\n"]}]},{"cell_type":"code","source":["# Evaluate our model\n","model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jgT1uInePEn7","executionInfo":{"status":"ok","timestamp":1707069942376,"user_tz":180,"elapsed":766,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"33c72e12-8221-46a1-8287-cd8d99dc5aa9"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 1s 6ms/step - loss: 11155.5312 - mae: 11155.5312\n"]},{"output_type":"execute_result","data":{"text/plain":["[11155.53125, 11155.53125]"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["### Plot history or loss curve or training curve"],"metadata":{"id":"UJizl8pXPEEL"}},{"cell_type":"code","source":["pd.DataFrame(history.history).plot()\n","plt.ylabel('loss')\n","plt.xlabel('epochs')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"GAjinHd8QXfz","executionInfo":{"status":"ok","timestamp":1707070344826,"user_tz":180,"elapsed":584,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"90395a59-fb88-47b6-a535-91974277306e"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'epochs')"]},"metadata":{},"execution_count":58},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Pre-Processing Data Again"],"metadata":{"id":"7ItFaRJFQkEY"}},{"cell_type":"markdown","source":["### Normalize and One-Hot-Enconded the Data"],"metadata":{"id":"9OUKDfBAWMyx"}},{"cell_type":"code","source":["from sklearn.compose import make_column_transformer\n","from sklearn.preprocessing import MinMaxScaler, OneHotEncoder\n","from sklearn.model_selection import train_test_split\n","\n","\n","insurance = pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")\n","insurance.head()\n","\n","# Create a columns transformer\n","ct = make_column_transformer(\n","    (MinMaxScaler(), ['age', \"bmi\", \"children\"]),\n","    (OneHotEncoder(handle_unknown= \"ignore\"), [\"sex\", \"smoker\", \"region\"])\n",")\n","\n","#Create X & y\n","\n","X = insurance.drop(\"charges\", axis=1)\n","y = insurance[\"charges\"]\n","\n","# Build our train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42) # With this we can separete our data in order to create 2 datasets 80% and 20%\n","\n","# Fit the columns transformer to our traning data\n","ct.fit(X_train)\n","\n","# Transform traning data and test data with normalization\n","X_train_normal = ct.transform(X_train)\n","X_test_normal = ct.transform(X_test)"],"metadata":{"id":"aF7whZN5SkHa","executionInfo":{"status":"ok","timestamp":1707071443786,"user_tz":180,"elapsed":201,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["X_train_normal[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_7BomJazXu6I","executionInfo":{"status":"ok","timestamp":1707071492685,"user_tz":180,"elapsed":3,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"00ef0a7d-18b2-4b29-a145-bd640d3fcacc"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.60869565, 0.10734463, 0.4       , 1.        , 0.        ,\n","       1.        , 0.        , 0.        , 1.        , 0.        ,\n","       0.        ])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# What does that to our data\n","X_train.shape, X_train_normal.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gI_hqfulVauo","executionInfo":{"status":"ok","timestamp":1707070746267,"user_tz":180,"elapsed":208,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"fbf31ea6-d81c-454e-bec0-9b57644ec4b9"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((1070, 6), (1070, 11))"]},"metadata":{},"execution_count":71}]},{"cell_type":"markdown","source":["### Build the neural network"],"metadata":{"id":"OaD7wbOUWJ9J"}},{"cell_type":"code","source":["# Build our model\n","\n","# 1. Create a model using the Sequential API\n","model_insurance = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100), # We add an extra layer in this larger datasets\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","# 2. Compile the model\n","model_insurance.compile(loss = tf.keras.losses.mae, #mae is Mean Absolute Error\n","              optimizer = tf.keras.optimizers.Adam(),\n","              metrics = ['mae'])\n","\n","# 3. Fit the model\n","history=model_insurance.fit(X_train_normal, y_train, epochs = 200) # We add more epochs and a history to see the loss curve"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o9IDgXgjWbiu","executionInfo":{"status":"ok","timestamp":1707071715432,"user_tz":180,"elapsed":42226,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"ff09b7b9-8120-46e3-c9dc-541e8e325968"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","34/34 [==============================] - 2s 5ms/step - loss: 13344.0703 - mae: 13344.0703\n","Epoch 2/200\n","34/34 [==============================] - 0s 3ms/step - loss: 13337.5547 - mae: 13337.5547\n","Epoch 3/200\n","34/34 [==============================] - 0s 4ms/step - loss: 13320.4434 - mae: 13320.4434\n","Epoch 4/200\n","34/34 [==============================] - 0s 3ms/step - loss: 13283.2949 - mae: 13283.2949\n","Epoch 5/200\n","34/34 [==============================] - 0s 4ms/step - loss: 13215.2705 - mae: 13215.2705\n","Epoch 6/200\n","34/34 [==============================] - 0s 4ms/step - loss: 13105.2480 - mae: 13105.2480\n","Epoch 7/200\n","34/34 [==============================] - 0s 3ms/step - loss: 12942.3604 - mae: 12942.3604\n","Epoch 8/200\n","34/34 [==============================] - 0s 3ms/step - loss: 12716.2930 - mae: 12716.2930\n","Epoch 9/200\n","34/34 [==============================] - 0s 3ms/step - loss: 12416.8936 - mae: 12416.8936\n","Epoch 10/200\n","34/34 [==============================] - 0s 4ms/step - loss: 12035.5674 - mae: 12035.5674\n","Epoch 11/200\n","34/34 [==============================] - 0s 3ms/step - loss: 11576.5811 - mae: 11576.5811\n","Epoch 12/200\n","34/34 [==============================] - 0s 3ms/step - loss: 11070.5420 - mae: 11070.5420\n","Epoch 13/200\n","34/34 [==============================] - 0s 3ms/step - loss: 10569.1191 - mae: 10569.1191\n","Epoch 14/200\n","34/34 [==============================] - 0s 3ms/step - loss: 10064.4229 - mae: 10064.4229\n","Epoch 15/200\n","34/34 [==============================] - 0s 3ms/step - loss: 9581.0742 - mae: 9581.0742\n","Epoch 16/200\n","34/34 [==============================] - 0s 3ms/step - loss: 9150.7764 - mae: 9150.7764\n","Epoch 17/200\n","34/34 [==============================] - 0s 4ms/step - loss: 8793.0010 - mae: 8793.0010\n","Epoch 18/200\n","34/34 [==============================] - 0s 4ms/step - loss: 8502.2891 - mae: 8502.2891\n","Epoch 19/200\n","34/34 [==============================] - 0s 3ms/step - loss: 8272.3447 - mae: 8272.3447\n","Epoch 20/200\n","34/34 [==============================] - 0s 3ms/step - loss: 8110.9058 - mae: 8110.9058\n","Epoch 21/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7997.2251 - mae: 7997.2251\n","Epoch 22/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7914.7485 - mae: 7914.7485\n","Epoch 23/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7852.3794 - mae: 7852.3794\n","Epoch 24/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7802.4287 - mae: 7802.4287\n","Epoch 25/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7752.7114 - mae: 7752.7114\n","Epoch 26/200\n","34/34 [==============================] - 0s 4ms/step - loss: 7709.6265 - mae: 7709.6265\n","Epoch 27/200\n","34/34 [==============================] - 0s 4ms/step - loss: 7666.0723 - mae: 7666.0723\n","Epoch 28/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7625.1836 - mae: 7625.1836\n","Epoch 29/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7582.5234 - mae: 7582.5234\n","Epoch 30/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7540.7852 - mae: 7540.7852\n","Epoch 31/200\n","34/34 [==============================] - 0s 4ms/step - loss: 7495.8306 - mae: 7495.8306\n","Epoch 32/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7453.2080 - mae: 7453.2080\n","Epoch 33/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7407.7017 - mae: 7407.7017\n","Epoch 34/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7361.9272 - mae: 7361.9272\n","Epoch 35/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7315.0239 - mae: 7315.0239\n","Epoch 36/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7267.7700 - mae: 7267.7700\n","Epoch 37/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7219.0864 - mae: 7219.0864\n","Epoch 38/200\n","34/34 [==============================] - 0s 4ms/step - loss: 7165.9814 - mae: 7165.9814\n","Epoch 39/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7114.7334 - mae: 7114.7334\n","Epoch 40/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7061.6533 - mae: 7061.6533\n","Epoch 41/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7006.7295 - mae: 7006.7295\n","Epoch 42/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6949.1152 - mae: 6949.1152\n","Epoch 43/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6889.5723 - mae: 6889.5723\n","Epoch 44/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6827.8486 - mae: 6827.8486\n","Epoch 45/200\n","34/34 [==============================] - 0s 4ms/step - loss: 6766.4414 - mae: 6766.4414\n","Epoch 46/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6693.8584 - mae: 6693.8584\n","Epoch 47/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6623.5132 - mae: 6623.5132\n","Epoch 48/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6550.5820 - mae: 6550.5820\n","Epoch 49/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6474.6812 - mae: 6474.6812\n","Epoch 50/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6396.6348 - mae: 6396.6348\n","Epoch 51/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6311.7646 - mae: 6311.7646\n","Epoch 52/200\n","34/34 [==============================] - 0s 4ms/step - loss: 6224.3008 - mae: 6224.3008\n","Epoch 53/200\n","34/34 [==============================] - 0s 4ms/step - loss: 6133.4141 - mae: 6133.4141\n","Epoch 54/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6038.0645 - mae: 6038.0645\n","Epoch 55/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5937.8208 - mae: 5937.8208\n","Epoch 56/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5833.5601 - mae: 5833.5601\n","Epoch 57/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5724.2759 - mae: 5724.2759\n","Epoch 58/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5613.4785 - mae: 5613.4785\n","Epoch 59/200\n","34/34 [==============================] - 0s 4ms/step - loss: 5501.6641 - mae: 5501.6641\n","Epoch 60/200\n","34/34 [==============================] - 0s 4ms/step - loss: 5386.9282 - mae: 5386.9282\n","Epoch 61/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5266.1572 - mae: 5266.1572\n","Epoch 62/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5147.3467 - mae: 5147.3467\n","Epoch 63/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5021.6479 - mae: 5021.6479\n","Epoch 64/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4893.4199 - mae: 4893.4199\n","Epoch 65/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4767.0259 - mae: 4767.0259\n","Epoch 66/200\n","34/34 [==============================] - 0s 4ms/step - loss: 4640.2378 - mae: 4640.2378\n","Epoch 67/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4520.4214 - mae: 4520.4214\n","Epoch 68/200\n","34/34 [==============================] - 0s 4ms/step - loss: 4409.2163 - mae: 4409.2163\n","Epoch 69/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4306.0010 - mae: 4306.0010\n","Epoch 70/200\n","34/34 [==============================] - 0s 5ms/step - loss: 4205.2407 - mae: 4205.2407\n","Epoch 71/200\n","34/34 [==============================] - 0s 5ms/step - loss: 4113.4082 - mae: 4113.4082\n","Epoch 72/200\n","34/34 [==============================] - 0s 5ms/step - loss: 4029.6448 - mae: 4029.6448\n","Epoch 73/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3952.5618 - mae: 3952.5618\n","Epoch 74/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3889.0398 - mae: 3889.0398\n","Epoch 75/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3832.3367 - mae: 3832.3367\n","Epoch 76/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3787.0977 - mae: 3787.0977\n","Epoch 77/200\n","34/34 [==============================] - 0s 6ms/step - loss: 3750.4255 - mae: 3750.4255\n","Epoch 78/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3722.7903 - mae: 3722.7903\n","Epoch 79/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3705.3313 - mae: 3705.3313\n","Epoch 80/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3692.4668 - mae: 3692.4668\n","Epoch 81/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3682.3589 - mae: 3682.3589\n","Epoch 82/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3675.9133 - mae: 3675.9133\n","Epoch 83/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3670.0593 - mae: 3670.0593\n","Epoch 84/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3666.6934 - mae: 3666.6934\n","Epoch 85/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3662.1316 - mae: 3662.1316\n","Epoch 86/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3660.7644 - mae: 3660.7644\n","Epoch 87/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3657.5591 - mae: 3657.5591\n","Epoch 88/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3656.1479 - mae: 3656.1479\n","Epoch 89/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3652.8853 - mae: 3652.8853\n","Epoch 90/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3651.7253 - mae: 3651.7253\n","Epoch 91/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3650.3687 - mae: 3650.3687\n","Epoch 92/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3648.3459 - mae: 3648.3459\n","Epoch 93/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3645.8523 - mae: 3645.8523\n","Epoch 94/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3645.5750 - mae: 3645.5750\n","Epoch 95/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3641.6892 - mae: 3641.6892\n","Epoch 96/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3641.3420 - mae: 3641.3420\n","Epoch 97/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3640.5591 - mae: 3640.5591\n","Epoch 98/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3637.7793 - mae: 3637.7793\n","Epoch 99/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3635.6545 - mae: 3635.6545\n","Epoch 100/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3634.2825 - mae: 3634.2825\n","Epoch 101/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3632.5278 - mae: 3632.5278\n","Epoch 102/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3631.9292 - mae: 3631.9292\n","Epoch 103/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3628.9089 - mae: 3628.9089\n","Epoch 104/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3629.5210 - mae: 3629.5210\n","Epoch 105/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3626.5598 - mae: 3626.5598\n","Epoch 106/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3625.9172 - mae: 3625.9172\n","Epoch 107/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3621.8320 - mae: 3621.8320\n","Epoch 108/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3621.6350 - mae: 3621.6350\n","Epoch 109/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3618.6350 - mae: 3618.6350\n","Epoch 110/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3617.7781 - mae: 3617.7781\n","Epoch 111/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3618.0396 - mae: 3618.0396\n","Epoch 112/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3616.5339 - mae: 3616.5339\n","Epoch 113/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3612.2791 - mae: 3612.2791\n","Epoch 114/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3614.2871 - mae: 3614.2871\n","Epoch 115/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3613.3982 - mae: 3613.3982\n","Epoch 116/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3608.5586 - mae: 3608.5586\n","Epoch 117/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3605.9414 - mae: 3605.9414\n","Epoch 118/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3604.7146 - mae: 3604.7146\n","Epoch 119/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3603.9172 - mae: 3603.9172\n","Epoch 120/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3599.5906 - mae: 3599.5906\n","Epoch 121/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3600.0596 - mae: 3600.0596\n","Epoch 122/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3595.8359 - mae: 3595.8359\n","Epoch 123/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3592.7207 - mae: 3592.7207\n","Epoch 124/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3592.1990 - mae: 3592.1990\n","Epoch 125/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3589.1987 - mae: 3589.1987\n","Epoch 126/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3589.0164 - mae: 3589.0164\n","Epoch 127/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3587.4731 - mae: 3587.4731\n","Epoch 128/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3585.5896 - mae: 3585.5896\n","Epoch 129/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3581.2258 - mae: 3581.2258\n","Epoch 130/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3579.4055 - mae: 3579.4055\n","Epoch 131/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3579.5681 - mae: 3579.5681\n","Epoch 132/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3574.9680 - mae: 3574.9680\n","Epoch 133/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3573.7273 - mae: 3573.7273\n","Epoch 134/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3570.2395 - mae: 3570.2395\n","Epoch 135/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3567.9500 - mae: 3567.9500\n","Epoch 136/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3567.0120 - mae: 3567.0120\n","Epoch 137/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3564.9382 - mae: 3564.9382\n","Epoch 138/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3564.0618 - mae: 3564.0618\n","Epoch 139/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3562.7532 - mae: 3562.7532\n","Epoch 140/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3559.8887 - mae: 3559.8887\n","Epoch 141/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3560.6289 - mae: 3560.6289\n","Epoch 142/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3555.8950 - mae: 3555.8950\n","Epoch 143/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3554.9875 - mae: 3554.9875\n","Epoch 144/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3553.0984 - mae: 3553.0984\n","Epoch 145/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3552.7004 - mae: 3552.7004\n","Epoch 146/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3549.6433 - mae: 3549.6433\n","Epoch 147/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3551.0039 - mae: 3551.0039\n","Epoch 148/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3546.3301 - mae: 3546.3301\n","Epoch 149/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3546.3435 - mae: 3546.3435\n","Epoch 150/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3545.6392 - mae: 3545.6392\n","Epoch 151/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3544.4060 - mae: 3544.4060\n","Epoch 152/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3541.8042 - mae: 3541.8042\n","Epoch 153/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3541.1692 - mae: 3541.1692\n","Epoch 154/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3539.3457 - mae: 3539.3457\n","Epoch 155/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3540.2190 - mae: 3540.2190\n","Epoch 156/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3533.9968 - mae: 3533.9968\n","Epoch 157/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3534.9941 - mae: 3534.9941\n","Epoch 158/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3532.5054 - mae: 3532.5054\n","Epoch 159/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3530.5471 - mae: 3530.5471\n","Epoch 160/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3530.2505 - mae: 3530.2505\n","Epoch 161/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3528.8044 - mae: 3528.8044\n","Epoch 162/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3527.6304 - mae: 3527.6304\n","Epoch 163/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3524.5300 - mae: 3524.5300\n","Epoch 164/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3526.0615 - mae: 3526.0615\n","Epoch 165/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3521.8459 - mae: 3521.8459\n","Epoch 166/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3521.6821 - mae: 3521.6821\n","Epoch 167/200\n","34/34 [==============================] - 0s 6ms/step - loss: 3520.4060 - mae: 3520.4060\n","Epoch 168/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3520.0691 - mae: 3520.0691\n","Epoch 169/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3519.4521 - mae: 3519.4521\n","Epoch 170/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3517.8040 - mae: 3517.8040\n","Epoch 171/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3519.2798 - mae: 3519.2798\n","Epoch 172/200\n","34/34 [==============================] - 0s 6ms/step - loss: 3514.2212 - mae: 3514.2212\n","Epoch 173/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3513.2791 - mae: 3513.2791\n","Epoch 174/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3511.6997 - mae: 3511.6997\n","Epoch 175/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3510.0864 - mae: 3510.0864\n","Epoch 176/200\n","34/34 [==============================] - 0s 5ms/step - loss: 3510.5190 - mae: 3510.5190\n","Epoch 177/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3507.3213 - mae: 3507.3213\n","Epoch 178/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3509.0952 - mae: 3509.0952\n","Epoch 179/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3505.2053 - mae: 3505.2053\n","Epoch 180/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3503.2810 - mae: 3503.2810\n","Epoch 181/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3507.0657 - mae: 3507.0657\n","Epoch 182/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.9321 - mae: 3501.9321\n","Epoch 183/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3502.2576 - mae: 3502.2576\n","Epoch 184/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3498.9736 - mae: 3498.9736\n","Epoch 185/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3497.6836 - mae: 3497.6836\n","Epoch 186/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3497.7476 - mae: 3497.7476\n","Epoch 187/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3494.8149 - mae: 3494.8149\n","Epoch 188/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3493.2427 - mae: 3493.2427\n","Epoch 189/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3492.8577 - mae: 3492.8577\n","Epoch 190/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3491.1484 - mae: 3491.1484\n","Epoch 191/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3492.7910 - mae: 3492.7910\n","Epoch 192/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3488.3286 - mae: 3488.3286\n","Epoch 193/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3488.2695 - mae: 3488.2695\n","Epoch 194/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.0044 - mae: 3485.0044\n","Epoch 195/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.8391 - mae: 3485.8391\n","Epoch 196/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3484.6665 - mae: 3484.6665\n","Epoch 197/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3483.0632 - mae: 3483.0632\n","Epoch 198/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.8501 - mae: 3480.8501\n","Epoch 199/200\n","34/34 [==============================] - 0s 4ms/step - loss: 3479.8564 - mae: 3479.8564\n","Epoch 200/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.5845 - mae: 3479.5845\n"]}]},{"cell_type":"code","source":["model_insurance.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"piTj261fX4cG","executionInfo":{"status":"ok","timestamp":1707071548937,"user_tz":180,"elapsed":213,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"d5f51d92-ea24-4c85-8e2b-7b4d9f1c413f"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_6 (Dense)             (None, 100)               1200      \n","                                                                 \n"," dense_7 (Dense)             (None, 10)                1010      \n","                                                                 \n"," dense_8 (Dense)             (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 2221 (8.68 KB)\n","Trainable params: 2221 (8.68 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# Evaluate our insurance\n","\n","model_insurance.evaluate(X_test_normal, y_test)\n","\n","pd.DataFrame(history.history).plot()\n","plt.ylabel('loss')\n","plt.xlabel('epochs')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"b1hlair6Xae8","executionInfo":{"status":"ok","timestamp":1707071715888,"user_tz":180,"elapsed":470,"user":{"displayName":"Tomas Hermosilla","userId":"08015635776946965066"}},"outputId":"6aa53799-e367-4045-d5a2-2090a352c1db"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 3ms/step - loss: 3168.9778 - mae: 3168.9778\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'epochs')"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}